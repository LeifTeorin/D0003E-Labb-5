
Labb5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00001c8c  00001d20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035b  0080011c  0080011c  00001d3c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001d3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d6c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f8  00000000  00000000  00001dac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000024e0  00000000  00000000  00001fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f47  00000000  00000000  00004484  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000140b  00000000  00000000  000053cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b24  00000000  00000000  000067d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000982  00000000  00000000  000072fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000022f4  00000000  00000000  00007c7e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  00009f72  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 ff 02 	jmp	0x5fe	; 0x5fe <__vector_1>
       8:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <__vector_2>
       c:	0c 94 dd 03 	jmp	0x7ba	; 0x7ba <__vector_3>
      10:	0c 94 4c 04 	jmp	0x898	; 0x898 <__vector_4>
      14:	0c 94 bb 04 	jmp	0x976	; 0x976 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 26 0b 	jmp	0x164c	; 0x164c <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 d4 0a 	jmp	0x15a8	; 0x15a8 <__vector_9>
      28:	0c 94 2a 05 	jmp	0xa54	; 0xa54 <__vector_10>
      2c:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__vector_11>
      30:	0c 94 08 06 	jmp	0xc10	; 0xc10 <__vector_12>
      34:	0c 94 77 06 	jmp	0xcee	; 0xcee <__vector_13>
      38:	0c 94 e6 06 	jmp	0xdcc	; 0xdcc <__vector_14>
      3c:	0c 94 55 07 	jmp	0xeaa	; 0xeaa <__vector_15>
      40:	0c 94 c4 07 	jmp	0xf88	; 0xf88 <__vector_16>
      44:	0c 94 33 08 	jmp	0x1066	; 0x1066 <__vector_17>
      48:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <__vector_18>
      4c:	0c 94 11 09 	jmp	0x1222	; 0x1222 <__vector_19>
      50:	0c 94 80 09 	jmp	0x1300	; 0x1300 <__vector_20>
      54:	0c 94 ef 09 	jmp	0x13de	; 0x13de <__vector_21>
      58:	0c 94 5e 0a 	jmp	0x14bc	; 0x14bc <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ec e8       	ldi	r30, 0x8C	; 140
      70:	fc e1       	ldi	r31, 0x1C	; 28
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ac 31       	cpi	r26, 0x1C	; 28
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ac e1       	ldi	r26, 0x1C	; 28
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a7 37       	cpi	r26, 0x77	; 119
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 55 01 	call	0x2aa	; 0x2aa <main>
      92:	0c 94 44 0e 	jmp	0x1c88	; 0x1c88 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <writeChar>:
	0x1f51,		// 8
	0x1b51		// 9
};

void writeChar(GUI *self, char ch, int pos){
	if((pos>5) | (pos<0)){
      9a:	46 30       	cpi	r20, 0x06	; 6
      9c:	51 05       	cpc	r21, r1
      9e:	b8 f5       	brcc	.+110    	; 0x10e <writeChar+0x74>
	char currbyte = 0x00;
	int character = 0;
	char *ptr;
	ptr  = &LCDDR0; // pekaren bï¿½rjar pï¿½ lcddr0
	
	if((int)ch > -1 && (int)ch < 10){
      a0:	6a 30       	cpi	r22, 0x0A	; 10
      a2:	48 f4       	brcc	.+18     	; 0xb6 <writeChar+0x1c>
		character = characters[(int)ch];
      a4:	e6 2f       	mov	r30, r22
      a6:	f0 e0       	ldi	r31, 0x00	; 0
      a8:	ee 0f       	add	r30, r30
      aa:	ff 1f       	adc	r31, r31
      ac:	e0 50       	subi	r30, 0x00	; 0
      ae:	ff 4f       	sbci	r31, 0xFF	; 255
      b0:	60 81       	ld	r22, Z
      b2:	71 81       	ldd	r23, Z+1	; 0x01
      b4:	02 c0       	rjmp	.+4      	; 0xba <writeChar+0x20>
		return;
	}
	int shift;
	char mask_reg;
	char currbyte = 0x00;
	int character = 0;
      b6:	60 e0       	ldi	r22, 0x00	; 0
      b8:	70 e0       	ldi	r23, 0x00	; 0
	if((int)ch > -1 && (int)ch < 10){
		character = characters[(int)ch];
	}
	
	
	if(pos & 0x01){ // om pos ï¿½r udda finns det en etta pï¿½ slutet, dï¿½ ska den skrivas pï¿½ de fyra bitarna till vï¿½nster pï¿½ registren
      ba:	40 ff       	sbrs	r20, 0
      bc:	03 c0       	rjmp	.+6      	; 0xc4 <writeChar+0x2a>
		mask_reg = 0x0f;
      be:	af e0       	ldi	r26, 0x0F	; 15
		shift = 4; // bitarna som ska skrivas behï¿½ver ï¿½ven flyttas fï¿½r att skrivas pï¿½ vï¿½nster sida
      c0:	b4 e0       	ldi	r27, 0x04	; 4
      c2:	02 c0       	rjmp	.+4      	; 0xc8 <writeChar+0x2e>
		}else{
		mask_reg = 0xf0;
      c4:	a0 ef       	ldi	r26, 0xF0	; 240
		shift = 0;
      c6:	b0 e0       	ldi	r27, 0x00	; 0
	}
	ptr = ptr + (pos>>1); // pekaren hamnar pï¿½ lcddr0, 1 eller 2 beroende pï¿½ pos
      c8:	55 95       	asr	r21
      ca:	47 95       	ror	r20
      cc:	fa 01       	movw	r30, r20
      ce:	e4 51       	subi	r30, 0x14	; 20
      d0:	ff 4f       	sbci	r31, 0xFF	; 255
	
	for(int i = 0; i < 4; i++){
      d2:	20 e0       	ldi	r18, 0x00	; 0
      d4:	30 e0       	ldi	r19, 0x00	; 0
      d6:	18 c0       	rjmp	.+48     	; 0x108 <writeChar+0x6e>
		currbyte = (character & 0x0f); // vi tar de 4 bittarna lï¿½ngst till hï¿½ger
      d8:	86 2f       	mov	r24, r22
      da:	8f 70       	andi	r24, 0x0F	; 15
		currbyte = currbyte << shift; // bittarna shiftas antingen 0 eller 4 steg ï¿½t vï¿½nster
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	0b 2e       	mov	r0, r27
      e0:	02 c0       	rjmp	.+4      	; 0xe6 <writeChar+0x4c>
      e2:	88 0f       	add	r24, r24
      e4:	99 1f       	adc	r25, r25
      e6:	0a 94       	dec	r0
      e8:	e2 f7       	brpl	.-8      	; 0xe2 <writeChar+0x48>
		*ptr = ((*ptr & mask_reg)|currbyte); // registret maskas och fylls sedan in med de bittarna vi hï¿½mtat
      ea:	90 81       	ld	r25, Z
      ec:	9a 23       	and	r25, r26
      ee:	89 2b       	or	r24, r25
      f0:	80 83       	st	Z, r24
		character = (character>>4); // vi tar bort de 4 bittarna till hï¿½ger
      f2:	75 95       	asr	r23
      f4:	67 95       	ror	r22
      f6:	75 95       	asr	r23
      f8:	67 95       	ror	r22
      fa:	75 95       	asr	r23
      fc:	67 95       	ror	r22
      fe:	75 95       	asr	r23
     100:	67 95       	ror	r22
		ptr += 5; // pekaren gï¿½r fem register fram fï¿½r nï¿½sta 4 bittar
     102:	35 96       	adiw	r30, 0x05	; 5
		mask_reg = 0xf0;
		shift = 0;
	}
	ptr = ptr + (pos>>1); // pekaren hamnar pï¿½ lcddr0, 1 eller 2 beroende pï¿½ pos
	
	for(int i = 0; i < 4; i++){
     104:	2f 5f       	subi	r18, 0xFF	; 255
     106:	3f 4f       	sbci	r19, 0xFF	; 255
     108:	24 30       	cpi	r18, 0x04	; 4
     10a:	31 05       	cpc	r19, r1
     10c:	2c f3       	brlt	.-54     	; 0xd8 <writeChar+0x3e>
     10e:	08 95       	ret

00000110 <printAt>:
		character = (character>>4); // vi tar bort de 4 bittarna till hï¿½ger
		ptr += 5; // pekaren gï¿½r fem register fram fï¿½r nï¿½sta 4 bittar
	}
}

void printAt(GUI *self, int args[]) {
     110:	cf 92       	push	r12
     112:	df 92       	push	r13
     114:	ef 92       	push	r14
     116:	ff 92       	push	r15
     118:	0f 93       	push	r16
     11a:	1f 93       	push	r17
     11c:	cf 93       	push	r28
     11e:	df 93       	push	r29
     120:	8c 01       	movw	r16, r24
	int pp = args[0]; // index 0 är position
     122:	fb 01       	movw	r30, r22
     124:	c0 81       	ld	r28, Z
     126:	d1 81       	ldd	r29, Z+1	; 0x01
	int num = args[1]; // index 1 är numret
     128:	c2 80       	ldd	r12, Z+2	; 0x02
     12a:	d3 80       	ldd	r13, Z+3	; 0x03
	//SYNC(self, writeChar, (((num % 100) / 10), pp));
	writeChar(self, ((num % 100) / 10), pp); // ï¿½ndra detta till sync sen, sï¿½ den blir lï¿½st
     12c:	c6 01       	movw	r24, r12
     12e:	64 e6       	ldi	r22, 0x64	; 100
     130:	70 e0       	ldi	r23, 0x00	; 0
     132:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__divmodhi4>
     136:	0f 2e       	mov	r0, r31
     138:	fa e0       	ldi	r31, 0x0A	; 10
     13a:	ef 2e       	mov	r14, r31
     13c:	f1 2c       	mov	r15, r1
     13e:	f0 2d       	mov	r31, r0
     140:	b7 01       	movw	r22, r14
     142:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__divmodhi4>
     146:	ae 01       	movw	r20, r28
     148:	c8 01       	movw	r24, r16
     14a:	0e 94 4d 00 	call	0x9a	; 0x9a <writeChar>
	pp++;
     14e:	21 96       	adiw	r28, 0x01	; 1
	//SYNC(self, writeChar, ((num % 10), pp));
	writeChar(self, (num % 10), pp); // ï¿½ndra detta till sync sen, sï¿½ den blir lï¿½st
     150:	c6 01       	movw	r24, r12
     152:	b7 01       	movw	r22, r14
     154:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__divmodhi4>
     158:	ae 01       	movw	r20, r28
     15a:	68 2f       	mov	r22, r24
     15c:	c8 01       	movw	r24, r16
     15e:	0e 94 4d 00 	call	0x9a	; 0x9a <writeChar>
}
     162:	df 91       	pop	r29
     164:	cf 91       	pop	r28
     166:	1f 91       	pop	r17
     168:	0f 91       	pop	r16
     16a:	ff 90       	pop	r15
     16c:	ef 90       	pop	r14
     16e:	df 90       	pop	r13
     170:	cf 90       	pop	r12
     172:	08 95       	ret

00000174 <init_program>:


void init_program(GUI *self){
     174:	0f 93       	push	r16
     176:	1f 93       	push	r17
     178:	cf 93       	push	r28
     17a:	df 93       	push	r29
     17c:	cd b7       	in	r28, 0x3d	; 61
     17e:	de b7       	in	r29, 0x3e	; 62
     180:	2c 97       	sbiw	r28, 0x0c	; 12
     182:	0f b6       	in	r0, 0x3f	; 63
     184:	f8 94       	cli
     186:	de bf       	out	0x3e, r29	; 62
     188:	0f be       	out	0x3f, r0	; 63
     18a:	cd bf       	out	0x3d, r28	; 61
     18c:	8c 01       	movw	r16, r24
	LCDCRA |= 0x80; // LCD enable
     18e:	e4 ee       	ldi	r30, 0xE4	; 228
     190:	f0 e0       	ldi	r31, 0x00	; 0
     192:	80 81       	ld	r24, Z
     194:	80 68       	ori	r24, 0x80	; 128
     196:	80 83       	st	Z, r24
	//	LCDCRB = (1<<LCDMUX0)|(1<<LCDMUX1)|(1<<LCDPM2)|(1<<LCDPM1)|(1<<LCDPM0);
	LCDCRB = 0xb7; // 1/3 bias och 1/4 duty, asynk-klockan anvï¿½nds och 25 segment anvï¿½nds
     198:	87 eb       	ldi	r24, 0xB7	; 183
     19a:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	LCDCCR |= 15; // sätter kontrastkontrollen till 3,35 V
     19e:	e7 ee       	ldi	r30, 0xE7	; 231
     1a0:	f0 e0       	ldi	r31, 0x00	; 0
     1a2:	80 81       	ld	r24, Z
     1a4:	8f 60       	ori	r24, 0x0F	; 15
     1a6:	80 83       	st	Z, r24
	LCDFRR = 7;	// sätter prescalern och ger framerate 32 Hz
     1a8:	87 e0       	ldi	r24, 0x07	; 7
     1aa:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	
	PORTB |= (1<<PB7)|(1<<PB6)|(1<<PB4);
     1ae:	85 b1       	in	r24, 0x05	; 5
     1b0:	80 6d       	ori	r24, 0xD0	; 208
     1b2:	85 b9       	out	0x05, r24	; 5
	PORTE |= (1<<PE2)|(1<<PE3);
     1b4:	8e b1       	in	r24, 0x0e	; 14
     1b6:	8c 60       	ori	r24, 0x0C	; 12
     1b8:	8e b9       	out	0x0e, r24	; 14
	DDRB = (1<<DDB5)|(1<<DDB3)|(1<<DDB2)|(1<<DDB1)|(1<<DDB0);
     1ba:	8f e2       	ldi	r24, 0x2F	; 47
     1bc:	84 b9       	out	0x04, r24	; 4
	DDRE = (1<<DDE6)|(1<<DDE4);
     1be:	80 e5       	ldi	r24, 0x50	; 80
     1c0:	8d b9       	out	0x0d, r24	; 13
	
	EIMSK = (1<<PCIE1)|(1<<PCIE0);
     1c2:	80 ec       	ldi	r24, 0xC0	; 192
     1c4:	8d bb       	out	0x1d, r24	; 29
	PCMSK0 = (1<<PCINT3)|(1<<PCINT2);
     1c6:	9c e0       	ldi	r25, 0x0C	; 12
     1c8:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__TEXT_REGION_LENGTH__+0x7fc06b>
	PCMSK1 = (1<<PCINT15)|(1<<PCINT14)|(1<<PCINT12);
     1cc:	90 ed       	ldi	r25, 0xD0	; 208
     1ce:	90 93 6c 00 	sts	0x006C, r25	; 0x80006c <__TEXT_REGION_LENGTH__+0x7fc06c>
//	UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(0<<RXCIE0)|(0<<UDRIE0);
	//	PCMSK1 = 0x80;
	TCCR1A = 0xC0;
     1d2:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7fc080>
	TCCR1B = 0x18;
     1d6:	88 e1       	ldi	r24, 0x18	; 24
     1d8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
	PRR = 0x00;
     1dc:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
	
	CLKPR = 0x80;
     1e0:	e1 e6       	ldi	r30, 0x61	; 97
     1e2:	f0 e0       	ldi	r31, 0x00	; 0
     1e4:	80 e8       	ldi	r24, 0x80	; 128
     1e6:	80 83       	st	Z, r24
	CLKPR = 0x00;
     1e8:	10 82       	st	Z, r1
	
	
	//	SYNC(self, printRight, 0);
	//	SYNC(self, printLeft, 0);
	int argone[2] = {0, 0};
     1ea:	1a 82       	std	Y+2, r1	; 0x02
     1ec:	19 82       	std	Y+1, r1	; 0x01
     1ee:	1c 82       	std	Y+4, r1	; 0x04
     1f0:	1b 82       	std	Y+3, r1	; 0x03
	int argtwo[2] = {4, 0};
     1f2:	84 e0       	ldi	r24, 0x04	; 4
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	9e 83       	std	Y+6, r25	; 0x06
     1f8:	8d 83       	std	Y+5, r24	; 0x05
     1fa:	18 86       	std	Y+8, r1	; 0x08
     1fc:	1f 82       	std	Y+7, r1	; 0x07
	int argthree[2] = {2, 0};
     1fe:	82 e0       	ldi	r24, 0x02	; 2
     200:	90 e0       	ldi	r25, 0x00	; 0
     202:	9a 87       	std	Y+10, r25	; 0x0a
     204:	89 87       	std	Y+9, r24	; 0x09
     206:	1c 86       	std	Y+12, r1	; 0x0c
     208:	1b 86       	std	Y+11, r1	; 0x0b
	printAt(self, argone);
     20a:	be 01       	movw	r22, r28
     20c:	6f 5f       	subi	r22, 0xFF	; 255
     20e:	7f 4f       	sbci	r23, 0xFF	; 255
     210:	c8 01       	movw	r24, r16
     212:	0e 94 88 00 	call	0x110	; 0x110 <printAt>
	printAt(self, argtwo);
     216:	be 01       	movw	r22, r28
     218:	6b 5f       	subi	r22, 0xFB	; 251
     21a:	7f 4f       	sbci	r23, 0xFF	; 255
     21c:	c8 01       	movw	r24, r16
     21e:	0e 94 88 00 	call	0x110	; 0x110 <printAt>
	printAt(self, argthree);
     222:	be 01       	movw	r22, r28
     224:	67 5f       	subi	r22, 0xF7	; 247
     226:	7f 4f       	sbci	r23, 0xFF	; 255
     228:	c8 01       	movw	r24, r16
     22a:	0e 94 88 00 	call	0x110	; 0x110 <printAt>
	//	printLeft(self, 0);
	//	printRight(self, 0);
     22e:	2c 96       	adiw	r28, 0x0c	; 12
     230:	0f b6       	in	r0, 0x3f	; 63
     232:	f8 94       	cli
     234:	de bf       	out	0x3e, r29	; 62
     236:	0f be       	out	0x3f, r0	; 63
     238:	cd bf       	out	0x3d, r28	; 61
     23a:	df 91       	pop	r29
     23c:	cf 91       	pop	r28
     23e:	1f 91       	pop	r17
     240:	0f 91       	pop	r16
     242:	08 95       	ret

00000244 <inputs>:

#include <avr/io.h>
#include <avr/portpins.h>
#include <stdint.h>

void inputs(InputHandler *self){
     244:	1f 93       	push	r17
     246:	cf 93       	push	r28
     248:	df 93       	push	r29
     24a:	00 d0       	rcall	.+0      	; 0x24c <inputs+0x8>
     24c:	00 d0       	rcall	.+0      	; 0x24e <inputs+0xa>
     24e:	cd b7       	in	r28, 0x3d	; 61
     250:	de b7       	in	r29, 0x3e	; 62
	char recieved = UDR0;
     252:	10 91 c6 00 	lds	r17, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
	int args[2] = {0, recieved+10};
     256:	1a 82       	std	Y+2, r1	; 0x02
     258:	19 82       	std	Y+1, r1	; 0x01
     25a:	21 2f       	mov	r18, r17
     25c:	30 e0       	ldi	r19, 0x00	; 0
     25e:	26 5f       	subi	r18, 0xF6	; 246
     260:	3f 4f       	sbci	r19, 0xFF	; 255
     262:	3c 83       	std	Y+4, r19	; 0x04
     264:	2b 83       	std	Y+3, r18	; 0x03
//	ASYNC(self->gui, printAt, args);
	printAt(self->gui, args);
     266:	be 01       	movw	r22, r28
     268:	6f 5f       	subi	r22, 0xFF	; 255
     26a:	7f 4f       	sbci	r23, 0xFF	; 255
     26c:	fc 01       	movw	r30, r24
     26e:	80 85       	ldd	r24, Z+8	; 0x08
     270:	91 85       	ldd	r25, Z+9	; 0x09
     272:	0e 94 88 00 	call	0x110	; 0x110 <printAt>
	while ((UCSR0A & (1 << UDRE0)) == 0) {};
     276:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
     27a:	85 ff       	sbrs	r24, 5
     27c:	fc cf       	rjmp	.-8      	; 0x276 <inputs+0x32>
	UDR0 = recieved + 100;
     27e:	1c 59       	subi	r17, 0x9C	; 156
     280:	10 93 c6 00 	sts	0x00C6, r17	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
}
     284:	0f 90       	pop	r0
     286:	0f 90       	pop	r0
     288:	0f 90       	pop	r0
     28a:	0f 90       	pop	r0
     28c:	df 91       	pop	r29
     28e:	cf 91       	pop	r28
     290:	1f 91       	pop	r17
     292:	08 95       	ret

00000294 <init_usart>:
/*	//Interrupt request
	EIFR = 0xC0;
	
	//Cause an interrupt
	EIMSK = 0xC0;*/
	UBRR0H = (unsigned char)(ubrr>>8);
     294:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = (unsigned char)ubrr;
     298:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
     29c:	88 e9       	ldi	r24, 0x98	; 152
     29e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
	
	/* Set frame format: 8data, 1stop bit */
	UCSR0C = (0<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);
     2a2:	86 e0       	ldi	r24, 0x06	; 6
     2a4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7fc0c2>
     2a8:	08 95       	ret

000002aa <main>:
}

int main(void)
{
	init_program(&gui);
     2aa:	80 e2       	ldi	r24, 0x20	; 32
     2ac:	91 e0       	ldi	r25, 0x01	; 1
     2ae:	0e 94 ba 00 	call	0x174	; 0x174 <init_program>
	init_usart(MYUBRR);
     2b2:	83 e3       	ldi	r24, 0x33	; 51
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	0e 94 4a 01 	call	0x294	; 0x294 <init_usart>
//	connectRoads(&controller, &northB, &southB);
//	sei();
	INSTALL(&inputs, inputs, IRQ_USART0_RX);
     2ba:	48 e0       	ldi	r20, 0x08	; 8
     2bc:	62 e2       	ldi	r22, 0x22	; 34
     2be:	71 e0       	ldi	r23, 0x01	; 1
     2c0:	cb 01       	movw	r24, r22
     2c2:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <install>
//	INSTALL(&inputs, testInputs, IRQ_PCINT0);
//	tinytimber(&controller, startup, NULL);
	tinytimber(&writer, writeToPort, 0);
     2c6:	40 e0       	ldi	r20, 0x00	; 0
     2c8:	50 e0       	ldi	r21, 0x00	; 0
     2ca:	6e e6       	ldi	r22, 0x6E	; 110
     2cc:	71 e0       	ldi	r23, 0x01	; 1
     2ce:	8c e1       	ldi	r24, 0x1C	; 28
     2d0:	91 e0       	ldi	r25, 0x01	; 1
     2d2:	0e 94 c4 0d 	call	0x1b88	; 0x1b88 <tinytimber>
//	UDR0 = 7;
}
     2d6:	80 e0       	ldi	r24, 0x00	; 0
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	08 95       	ret

000002dc <writeToPort>:
 #include <avr/io.h>
 #include <avr/portpins.h>
 #include <stdint.h>
 
 void writeToPort(PortWriter *self, int num){
	while ((UCSR0A & (1 << UDRE0)) == 0) {};
     2dc:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
     2e0:	85 ff       	sbrs	r24, 5
     2e2:	fc cf       	rjmp	.-8      	; 0x2dc <writeToPort>
	UDR0 = num; 
     2e4:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     2e8:	08 95       	ret

000002ea <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     2ea:	cf 93       	push	r28
     2ec:	df 93       	push	r29
     2ee:	00 d0       	rcall	.+0      	; 0x2f0 <initialize+0x6>
     2f0:	00 d0       	rcall	.+0      	; 0x2f2 <initialize+0x8>
     2f2:	cd b7       	in	r28, 0x3d	; 61
     2f4:	de b7       	in	r29, 0x3e	; 62
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	18 c0       	rjmp	.+48     	; 0x32c <initialize+0x42>
     2fc:	ac 01       	movw	r20, r24
     2fe:	4f 5f       	subi	r20, 0xFF	; 255
     300:	5f 4f       	sbci	r21, 0xFF	; 255
     302:	9a 01       	movw	r18, r20
     304:	22 95       	swap	r18
     306:	32 95       	swap	r19
     308:	30 7f       	andi	r19, 0xF0	; 240
     30a:	32 27       	eor	r19, r18
     30c:	20 7f       	andi	r18, 0xF0	; 240
     30e:	32 27       	eor	r19, r18
     310:	29 5f       	subi	r18, 0xF9	; 249
     312:	3d 4f       	sbci	r19, 0xFD	; 253
     314:	82 95       	swap	r24
     316:	92 95       	swap	r25
     318:	90 7f       	andi	r25, 0xF0	; 240
     31a:	98 27       	eor	r25, r24
     31c:	80 7f       	andi	r24, 0xF0	; 240
     31e:	98 27       	eor	r25, r24
     320:	fc 01       	movw	r30, r24
     322:	e9 5f       	subi	r30, 0xF9	; 249
     324:	fd 4f       	sbci	r31, 0xFD	; 253
     326:	31 83       	std	Z+1, r19	; 0x01
     328:	20 83       	st	Z, r18
     32a:	ca 01       	movw	r24, r20
     32c:	8e 30       	cpi	r24, 0x0E	; 14
     32e:	91 05       	cpc	r25, r1
     330:	2c f3       	brlt	.-54     	; 0x2fc <initialize+0x12>
     332:	10 92 e8 02 	sts	0x02E8, r1	; 0x8002e8 <messages+0xe1>
     336:	10 92 e7 02 	sts	0x02E7, r1	; 0x8002e7 <messages+0xe0>
     33a:	80 e0       	ldi	r24, 0x00	; 0
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	15 c0       	rjmp	.+42     	; 0x36a <initialize+0x80>
     340:	ac 01       	movw	r20, r24
     342:	4f 5f       	subi	r20, 0xFF	; 255
     344:	5f 4f       	sbci	r21, 0xFF	; 255
     346:	6d e1       	ldi	r22, 0x1D	; 29
     348:	64 9f       	mul	r22, r20
     34a:	90 01       	movw	r18, r0
     34c:	65 9f       	mul	r22, r21
     34e:	30 0d       	add	r19, r0
     350:	11 24       	eor	r1, r1
     352:	2e 5a       	subi	r18, 0xAE	; 174
     354:	3e 4f       	sbci	r19, 0xFE	; 254
     356:	68 9f       	mul	r22, r24
     358:	f0 01       	movw	r30, r0
     35a:	69 9f       	mul	r22, r25
     35c:	f0 0d       	add	r31, r0
     35e:	11 24       	eor	r1, r1
     360:	ee 5a       	subi	r30, 0xAE	; 174
     362:	fe 4f       	sbci	r31, 0xFE	; 254
     364:	31 83       	std	Z+1, r19	; 0x01
     366:	20 83       	st	Z, r18
     368:	ca 01       	movw	r24, r20
     36a:	83 30       	cpi	r24, 0x03	; 3
     36c:	91 05       	cpc	r25, r1
     36e:	44 f3       	brlt	.-48     	; 0x340 <initialize+0x56>
     370:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <threads+0x58>
     374:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <threads+0x57>
     378:	1a 82       	std	Y+2, r1	; 0x02
     37a:	19 82       	std	Y+1, r1	; 0x01
     37c:	32 c0       	rjmp	.+100    	; 0x3e2 <initialize+0xf8>
     37e:	2d e1       	ldi	r18, 0x1D	; 29
     380:	49 81       	ldd	r20, Y+1	; 0x01
     382:	5a 81       	ldd	r21, Y+2	; 0x02
     384:	24 9f       	mul	r18, r20
     386:	c0 01       	movw	r24, r0
     388:	25 9f       	mul	r18, r21
     38a:	90 0d       	add	r25, r0
     38c:	11 24       	eor	r1, r1
     38e:	fc 01       	movw	r30, r24
     390:	e8 5a       	subi	r30, 0xA8	; 168
     392:	fe 4f       	sbci	r31, 0xFE	; 254
     394:	fc 83       	std	Y+4, r31	; 0x04
     396:	eb 83       	std	Y+3, r30	; 0x03
     398:	cf 01       	movw	r24, r30
     39a:	0e 94 03 0e 	call	0x1c06	; 0x1c06 <setjmp>
     39e:	20 e6       	ldi	r18, 0x60	; 96
     3a0:	49 81       	ldd	r20, Y+1	; 0x01
     3a2:	5a 81       	ldd	r21, Y+2	; 0x02
     3a4:	24 9f       	mul	r18, r20
     3a6:	c0 01       	movw	r24, r0
     3a8:	25 9f       	mul	r18, r21
     3aa:	90 0d       	add	r25, r0
     3ac:	11 24       	eor	r1, r1
     3ae:	8d 5a       	subi	r24, 0xAD	; 173
     3b0:	9c 4f       	sbci	r25, 0xFC	; 252
     3b2:	eb 81       	ldd	r30, Y+3	; 0x03
     3b4:	fc 81       	ldd	r31, Y+4	; 0x04
     3b6:	91 8b       	std	Z+17, r25	; 0x11
     3b8:	80 8b       	std	Z+16, r24	; 0x10
     3ba:	93 8b       	std	Z+19, r25	; 0x13
     3bc:	82 8b       	std	Z+18, r24	; 0x12
     3be:	81 e5       	ldi	r24, 0x51	; 81
     3c0:	9d e0       	ldi	r25, 0x0D	; 13
     3c2:	96 8b       	std	Z+22, r25	; 0x16
     3c4:	85 8b       	std	Z+21, r24	; 0x15
     3c6:	8d e1       	ldi	r24, 0x1D	; 29
     3c8:	84 9f       	mul	r24, r20
     3ca:	f0 01       	movw	r30, r0
     3cc:	85 9f       	mul	r24, r21
     3ce:	f0 0d       	add	r31, r0
     3d0:	11 24       	eor	r1, r1
     3d2:	ee 5a       	subi	r30, 0xAE	; 174
     3d4:	fe 4f       	sbci	r31, 0xFE	; 254
     3d6:	15 82       	std	Z+5, r1	; 0x05
     3d8:	14 82       	std	Z+4, r1	; 0x04
     3da:	4f 5f       	subi	r20, 0xFF	; 255
     3dc:	5f 4f       	sbci	r21, 0xFF	; 255
     3de:	5a 83       	std	Y+2, r21	; 0x02
     3e0:	49 83       	std	Y+1, r20	; 0x01
     3e2:	29 81       	ldd	r18, Y+1	; 0x01
     3e4:	3a 81       	ldd	r19, Y+2	; 0x02
     3e6:	24 30       	cpi	r18, 0x04	; 4
     3e8:	31 05       	cpc	r19, r1
     3ea:	4c f2       	brlt	.-110    	; 0x37e <initialize+0x94>
     3ec:	ea ee       	ldi	r30, 0xEA	; 234
     3ee:	f1 e0       	ldi	r31, 0x01	; 1
     3f0:	11 82       	std	Z+1, r1	; 0x01
     3f2:	10 82       	st	Z, r1
     3f4:	15 82       	std	Z+5, r1	; 0x05
     3f6:	14 82       	std	Z+4, r1	; 0x04
     3f8:	13 82       	std	Z+3, r1	; 0x03
     3fa:	12 82       	std	Z+2, r1	; 0x02
     3fc:	e1 e6       	ldi	r30, 0x61	; 97
     3fe:	f0 e0       	ldi	r31, 0x00	; 0
     400:	80 e8       	ldi	r24, 0x80	; 128
     402:	80 83       	st	Z, r24
     404:	10 82       	st	Z, r1
     406:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     40a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     40e:	84 e0       	ldi	r24, 0x04	; 4
     410:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     414:	81 e0       	ldi	r24, 0x01	; 1
     416:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     41a:	0f 90       	pop	r0
     41c:	0f 90       	pop	r0
     41e:	0f 90       	pop	r0
     420:	0f 90       	pop	r0
     422:	df 91       	pop	r29
     424:	cf 91       	pop	r28
     426:	08 95       	ret

00000428 <dispatch>:
     428:	cf 93       	push	r28
     42a:	df 93       	push	r29
     42c:	00 d0       	rcall	.+0      	; 0x42e <dispatch+0x6>
     42e:	cd b7       	in	r28, 0x3d	; 61
     430:	de b7       	in	r29, 0x3e	; 62
     432:	9a 83       	std	Y+2, r25	; 0x02
     434:	89 83       	std	Y+1, r24	; 0x01
     436:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <current>
     43a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <current+0x1>
     43e:	06 96       	adiw	r24, 0x06	; 6
     440:	0e 94 03 0e 	call	0x1c06	; 0x1c06 <setjmp>
     444:	89 2b       	or	r24, r25
     446:	59 f4       	brne	.+22     	; 0x45e <dispatch+0x36>
     448:	89 81       	ldd	r24, Y+1	; 0x01
     44a:	9a 81       	ldd	r25, Y+2	; 0x02
     44c:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <current+0x1>
     450:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <current>
     454:	61 e0       	ldi	r22, 0x01	; 1
     456:	70 e0       	ldi	r23, 0x00	; 0
     458:	06 96       	adiw	r24, 0x06	; 6
     45a:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <longjmp>
     45e:	0f 90       	pop	r0
     460:	0f 90       	pop	r0
     462:	df 91       	pop	r29
     464:	cf 91       	pop	r28
     466:	08 95       	ret

00000468 <enqueueByDeadline>:
     468:	0f 93       	push	r16
     46a:	1f 93       	push	r17
     46c:	cf 93       	push	r28
     46e:	df 93       	push	r29
     470:	dc 01       	movw	r26, r24
     472:	cb 01       	movw	r24, r22
     474:	eb 01       	movw	r28, r22
     476:	e8 81       	ld	r30, Y
     478:	f9 81       	ldd	r31, Y+1	; 0x01
     47a:	c0 e0       	ldi	r28, 0x00	; 0
     47c:	d0 e0       	ldi	r29, 0x00	; 0
     47e:	04 c0       	rjmp	.+8      	; 0x488 <enqueueByDeadline+0x20>
     480:	ef 01       	movw	r28, r30
     482:	01 90       	ld	r0, Z+
     484:	f0 81       	ld	r31, Z
     486:	e0 2d       	mov	r30, r0
     488:	30 97       	sbiw	r30, 0x00	; 0
     48a:	79 f0       	breq	.+30     	; 0x4aa <enqueueByDeadline+0x42>
     48c:	06 81       	ldd	r16, Z+6	; 0x06
     48e:	17 81       	ldd	r17, Z+7	; 0x07
     490:	20 85       	ldd	r18, Z+8	; 0x08
     492:	31 85       	ldd	r19, Z+9	; 0x09
     494:	16 96       	adiw	r26, 0x06	; 6
     496:	4d 91       	ld	r20, X+
     498:	5d 91       	ld	r21, X+
     49a:	6d 91       	ld	r22, X+
     49c:	7c 91       	ld	r23, X
     49e:	19 97       	sbiw	r26, 0x09	; 9
     4a0:	40 17       	cp	r20, r16
     4a2:	51 07       	cpc	r21, r17
     4a4:	62 07       	cpc	r22, r18
     4a6:	73 07       	cpc	r23, r19
     4a8:	5c f7       	brge	.-42     	; 0x480 <enqueueByDeadline+0x18>
     4aa:	11 96       	adiw	r26, 0x01	; 1
     4ac:	fc 93       	st	X, r31
     4ae:	ee 93       	st	-X, r30
     4b0:	20 97       	sbiw	r28, 0x00	; 0
     4b2:	21 f4       	brne	.+8      	; 0x4bc <enqueueByDeadline+0x54>
     4b4:	fc 01       	movw	r30, r24
     4b6:	b1 83       	std	Z+1, r27	; 0x01
     4b8:	a0 83       	st	Z, r26
     4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <enqueueByDeadline+0x58>
     4bc:	b9 83       	std	Y+1, r27	; 0x01
     4be:	a8 83       	st	Y, r26
     4c0:	df 91       	pop	r29
     4c2:	cf 91       	pop	r28
     4c4:	1f 91       	pop	r17
     4c6:	0f 91       	pop	r16
     4c8:	08 95       	ret

000004ca <enqueueByBaseline>:
     4ca:	0f 93       	push	r16
     4cc:	1f 93       	push	r17
     4ce:	cf 93       	push	r28
     4d0:	df 93       	push	r29
     4d2:	dc 01       	movw	r26, r24
     4d4:	cb 01       	movw	r24, r22
     4d6:	eb 01       	movw	r28, r22
     4d8:	e8 81       	ld	r30, Y
     4da:	f9 81       	ldd	r31, Y+1	; 0x01
     4dc:	c0 e0       	ldi	r28, 0x00	; 0
     4de:	d0 e0       	ldi	r29, 0x00	; 0
     4e0:	04 c0       	rjmp	.+8      	; 0x4ea <enqueueByBaseline+0x20>
     4e2:	ef 01       	movw	r28, r30
     4e4:	01 90       	ld	r0, Z+
     4e6:	f0 81       	ld	r31, Z
     4e8:	e0 2d       	mov	r30, r0
     4ea:	30 97       	sbiw	r30, 0x00	; 0
     4ec:	79 f0       	breq	.+30     	; 0x50c <__stack+0xd>
     4ee:	02 81       	ldd	r16, Z+2	; 0x02
     4f0:	13 81       	ldd	r17, Z+3	; 0x03
     4f2:	24 81       	ldd	r18, Z+4	; 0x04
     4f4:	35 81       	ldd	r19, Z+5	; 0x05
     4f6:	12 96       	adiw	r26, 0x02	; 2
     4f8:	4d 91       	ld	r20, X+
     4fa:	5d 91       	ld	r21, X+
     4fc:	6d 91       	ld	r22, X+
     4fe:	7c 91       	ld	r23, X
     500:	15 97       	sbiw	r26, 0x05	; 5
     502:	40 17       	cp	r20, r16
     504:	51 07       	cpc	r21, r17
     506:	62 07       	cpc	r22, r18
     508:	73 07       	cpc	r23, r19
     50a:	5c f7       	brge	.-42     	; 0x4e2 <enqueueByBaseline+0x18>
     50c:	11 96       	adiw	r26, 0x01	; 1
     50e:	fc 93       	st	X, r31
     510:	ee 93       	st	-X, r30
     512:	20 97       	sbiw	r28, 0x00	; 0
     514:	21 f4       	brne	.+8      	; 0x51e <__stack+0x1f>
     516:	fc 01       	movw	r30, r24
     518:	b1 83       	std	Z+1, r27	; 0x01
     51a:	a0 83       	st	Z, r26
     51c:	02 c0       	rjmp	.+4      	; 0x522 <__stack+0x23>
     51e:	b9 83       	std	Y+1, r27	; 0x01
     520:	a8 83       	st	Y, r26
     522:	df 91       	pop	r29
     524:	cf 91       	pop	r28
     526:	1f 91       	pop	r17
     528:	0f 91       	pop	r16
     52a:	08 95       	ret

0000052c <dequeue>:
     52c:	dc 01       	movw	r26, r24
     52e:	ed 91       	ld	r30, X+
     530:	fc 91       	ld	r31, X
     532:	11 97       	sbiw	r26, 0x01	; 1
     534:	30 97       	sbiw	r30, 0x00	; 0
     536:	59 f4       	brne	.+22     	; 0x54e <dequeue+0x22>
     538:	8f ef       	ldi	r24, 0xFF	; 255
     53a:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     53e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     542:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     546:	81 e0       	ldi	r24, 0x01	; 1
     548:	83 bf       	out	0x33, r24	; 51
     54a:	88 95       	sleep
     54c:	fc cf       	rjmp	.-8      	; 0x546 <dequeue+0x1a>
     54e:	20 81       	ld	r18, Z
     550:	31 81       	ldd	r19, Z+1	; 0x01
     552:	2d 93       	st	X+, r18
     554:	3c 93       	st	X, r19
     556:	cf 01       	movw	r24, r30
     558:	08 95       	ret

0000055a <insert>:
     55a:	fb 01       	movw	r30, r22
     55c:	20 81       	ld	r18, Z
     55e:	31 81       	ldd	r19, Z+1	; 0x01
     560:	fc 01       	movw	r30, r24
     562:	31 83       	std	Z+1, r19	; 0x01
     564:	20 83       	st	Z, r18
     566:	fb 01       	movw	r30, r22
     568:	91 83       	std	Z+1, r25	; 0x01
     56a:	80 83       	st	Z, r24
     56c:	08 95       	ret

0000056e <push>:
     56e:	fb 01       	movw	r30, r22
     570:	20 81       	ld	r18, Z
     572:	31 81       	ldd	r19, Z+1	; 0x01
     574:	fc 01       	movw	r30, r24
     576:	31 83       	std	Z+1, r19	; 0x01
     578:	20 83       	st	Z, r18
     57a:	fb 01       	movw	r30, r22
     57c:	91 83       	std	Z+1, r25	; 0x01
     57e:	80 83       	st	Z, r24
     580:	08 95       	ret

00000582 <pop>:
     582:	dc 01       	movw	r26, r24
     584:	ed 91       	ld	r30, X+
     586:	fc 91       	ld	r31, X
     588:	11 97       	sbiw	r26, 0x01	; 1
     58a:	20 81       	ld	r18, Z
     58c:	31 81       	ldd	r19, Z+1	; 0x01
     58e:	2d 93       	st	X+, r18
     590:	3c 93       	st	X, r19
     592:	cf 01       	movw	r24, r30
     594:	08 95       	ret

00000596 <schedule>:
     596:	cf 93       	push	r28
     598:	df 93       	push	r29
     59a:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <activeStack>
     59e:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <activeStack+0x1>
     5a2:	c2 81       	ldd	r28, Z+2	; 0x02
     5a4:	d3 81       	ldd	r29, Z+3	; 0x03
     5a6:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <msgQ>
     5aa:	f0 91 2d 01 	lds	r31, 0x012D	; 0x80012d <msgQ+0x1>
     5ae:	30 97       	sbiw	r30, 0x00	; 0
     5b0:	19 f1       	breq	.+70     	; 0x5f8 <schedule+0x62>
     5b2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <threadPool>
     5b6:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <threadPool+0x1>
     5ba:	89 2b       	or	r24, r25
     5bc:	e9 f0       	breq	.+58     	; 0x5f8 <schedule+0x62>
     5be:	20 97       	sbiw	r28, 0x00	; 0
     5c0:	69 f0       	breq	.+26     	; 0x5dc <schedule+0x46>
     5c2:	86 81       	ldd	r24, Z+6	; 0x06
     5c4:	97 81       	ldd	r25, Z+7	; 0x07
     5c6:	a0 85       	ldd	r26, Z+8	; 0x08
     5c8:	b1 85       	ldd	r27, Z+9	; 0x09
     5ca:	4e 81       	ldd	r20, Y+6	; 0x06
     5cc:	5f 81       	ldd	r21, Y+7	; 0x07
     5ce:	68 85       	ldd	r22, Y+8	; 0x08
     5d0:	79 85       	ldd	r23, Y+9	; 0x09
     5d2:	84 1b       	sub	r24, r20
     5d4:	95 0b       	sbc	r25, r21
     5d6:	a6 0b       	sbc	r26, r22
     5d8:	b7 0b       	sbc	r27, r23
     5da:	72 f4       	brpl	.+28     	; 0x5f8 <schedule+0x62>
     5dc:	88 e1       	ldi	r24, 0x18	; 24
     5de:	91 e0       	ldi	r25, 0x01	; 1
     5e0:	0e 94 c1 02 	call	0x582	; 0x582 <pop>
     5e4:	66 e1       	ldi	r22, 0x16	; 22
     5e6:	71 e0       	ldi	r23, 0x01	; 1
     5e8:	0e 94 b7 02 	call	0x56e	; 0x56e <push>
     5ec:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <activeStack>
     5f0:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <activeStack+0x1>
     5f4:	0e 94 14 02 	call	0x428	; 0x428 <dispatch>
     5f8:	df 91       	pop	r29
     5fa:	cf 91       	pop	r28
     5fc:	08 95       	ret

000005fe <__vector_1>:
     5fe:	1f 92       	push	r1
     600:	0f 92       	push	r0
     602:	0f b6       	in	r0, 0x3f	; 63
     604:	0f 92       	push	r0
     606:	11 24       	eor	r1, r1
     608:	0f 93       	push	r16
     60a:	1f 93       	push	r17
     60c:	2f 93       	push	r18
     60e:	3f 93       	push	r19
     610:	4f 93       	push	r20
     612:	5f 93       	push	r21
     614:	6f 93       	push	r22
     616:	7f 93       	push	r23
     618:	8f 93       	push	r24
     61a:	9f 93       	push	r25
     61c:	af 93       	push	r26
     61e:	bf 93       	push	r27
     620:	ef 93       	push	r30
     622:	ff 93       	push	r31
     624:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
     628:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
     62c:	ac 01       	movw	r20, r24
     62e:	09 2e       	mov	r0, r25
     630:	00 0c       	add	r0, r0
     632:	66 0b       	sbc	r22, r22
     634:	77 0b       	sbc	r23, r23
     636:	9a 01       	movw	r18, r20
     638:	11 27       	eor	r17, r17
     63a:	00 27       	eor	r16, r16
     63c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     640:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     644:	60 e0       	ldi	r22, 0x00	; 0
     646:	70 e0       	ldi	r23, 0x00	; 0
     648:	40 2b       	or	r20, r16
     64a:	51 2b       	or	r21, r17
     64c:	62 2b       	or	r22, r18
     64e:	73 2b       	or	r23, r19
     650:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
     654:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
     658:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
     65c:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
     660:	b0 9b       	sbis	0x16, 0	; 22
     662:	1a c0       	rjmp	.+52     	; 0x698 <__vector_1+0x9a>
     664:	01 96       	adiw	r24, 0x01	; 1
     666:	09 2e       	mov	r0, r25
     668:	00 0c       	add	r0, r0
     66a:	aa 0b       	sbc	r26, r26
     66c:	bb 0b       	sbc	r27, r27
     66e:	bc 01       	movw	r22, r24
     670:	55 27       	eor	r21, r21
     672:	44 27       	eor	r20, r20
     674:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     678:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     67c:	a0 e0       	ldi	r26, 0x00	; 0
     67e:	b0 e0       	ldi	r27, 0x00	; 0
     680:	84 2b       	or	r24, r20
     682:	95 2b       	or	r25, r21
     684:	a6 2b       	or	r26, r22
     686:	b7 2b       	or	r27, r23
     688:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
     68c:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
     690:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
     694:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
     698:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable>
     69c:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x1>
     6a0:	30 97       	sbiw	r30, 0x00	; 0
     6a2:	39 f0       	breq	.+14     	; 0x6b2 <__vector_1+0xb4>
     6a4:	60 e0       	ldi	r22, 0x00	; 0
     6a6:	70 e0       	ldi	r23, 0x00	; 0
     6a8:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable>
     6ac:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x1>
     6b0:	09 95       	icall
     6b2:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
     6b6:	ff 91       	pop	r31
     6b8:	ef 91       	pop	r30
     6ba:	bf 91       	pop	r27
     6bc:	af 91       	pop	r26
     6be:	9f 91       	pop	r25
     6c0:	8f 91       	pop	r24
     6c2:	7f 91       	pop	r23
     6c4:	6f 91       	pop	r22
     6c6:	5f 91       	pop	r21
     6c8:	4f 91       	pop	r20
     6ca:	3f 91       	pop	r19
     6cc:	2f 91       	pop	r18
     6ce:	1f 91       	pop	r17
     6d0:	0f 91       	pop	r16
     6d2:	0f 90       	pop	r0
     6d4:	0f be       	out	0x3f, r0	; 63
     6d6:	0f 90       	pop	r0
     6d8:	1f 90       	pop	r1
     6da:	18 95       	reti

000006dc <__vector_2>:
     6dc:	1f 92       	push	r1
     6de:	0f 92       	push	r0
     6e0:	0f b6       	in	r0, 0x3f	; 63
     6e2:	0f 92       	push	r0
     6e4:	11 24       	eor	r1, r1
     6e6:	0f 93       	push	r16
     6e8:	1f 93       	push	r17
     6ea:	2f 93       	push	r18
     6ec:	3f 93       	push	r19
     6ee:	4f 93       	push	r20
     6f0:	5f 93       	push	r21
     6f2:	6f 93       	push	r22
     6f4:	7f 93       	push	r23
     6f6:	8f 93       	push	r24
     6f8:	9f 93       	push	r25
     6fa:	af 93       	push	r26
     6fc:	bf 93       	push	r27
     6fe:	ef 93       	push	r30
     700:	ff 93       	push	r31
     702:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
     706:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
     70a:	ac 01       	movw	r20, r24
     70c:	09 2e       	mov	r0, r25
     70e:	00 0c       	add	r0, r0
     710:	66 0b       	sbc	r22, r22
     712:	77 0b       	sbc	r23, r23
     714:	9a 01       	movw	r18, r20
     716:	11 27       	eor	r17, r17
     718:	00 27       	eor	r16, r16
     71a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     71e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     722:	60 e0       	ldi	r22, 0x00	; 0
     724:	70 e0       	ldi	r23, 0x00	; 0
     726:	40 2b       	or	r20, r16
     728:	51 2b       	or	r21, r17
     72a:	62 2b       	or	r22, r18
     72c:	73 2b       	or	r23, r19
     72e:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
     732:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
     736:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
     73a:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
     73e:	b0 9b       	sbis	0x16, 0	; 22
     740:	1a c0       	rjmp	.+52     	; 0x776 <__vector_2+0x9a>
     742:	01 96       	adiw	r24, 0x01	; 1
     744:	09 2e       	mov	r0, r25
     746:	00 0c       	add	r0, r0
     748:	aa 0b       	sbc	r26, r26
     74a:	bb 0b       	sbc	r27, r27
     74c:	bc 01       	movw	r22, r24
     74e:	55 27       	eor	r21, r21
     750:	44 27       	eor	r20, r20
     752:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     756:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     75a:	a0 e0       	ldi	r26, 0x00	; 0
     75c:	b0 e0       	ldi	r27, 0x00	; 0
     75e:	84 2b       	or	r24, r20
     760:	95 2b       	or	r25, r21
     762:	a6 2b       	or	r26, r22
     764:	b7 2b       	or	r27, r23
     766:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
     76a:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
     76e:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
     772:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
     776:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x2>
     77a:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x3>
     77e:	30 97       	sbiw	r30, 0x00	; 0
     780:	39 f0       	breq	.+14     	; 0x790 <__vector_2+0xb4>
     782:	61 e0       	ldi	r22, 0x01	; 1
     784:	70 e0       	ldi	r23, 0x00	; 0
     786:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x2>
     78a:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x3>
     78e:	09 95       	icall
     790:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
     794:	ff 91       	pop	r31
     796:	ef 91       	pop	r30
     798:	bf 91       	pop	r27
     79a:	af 91       	pop	r26
     79c:	9f 91       	pop	r25
     79e:	8f 91       	pop	r24
     7a0:	7f 91       	pop	r23
     7a2:	6f 91       	pop	r22
     7a4:	5f 91       	pop	r21
     7a6:	4f 91       	pop	r20
     7a8:	3f 91       	pop	r19
     7aa:	2f 91       	pop	r18
     7ac:	1f 91       	pop	r17
     7ae:	0f 91       	pop	r16
     7b0:	0f 90       	pop	r0
     7b2:	0f be       	out	0x3f, r0	; 63
     7b4:	0f 90       	pop	r0
     7b6:	1f 90       	pop	r1
     7b8:	18 95       	reti

000007ba <__vector_3>:
     7ba:	1f 92       	push	r1
     7bc:	0f 92       	push	r0
     7be:	0f b6       	in	r0, 0x3f	; 63
     7c0:	0f 92       	push	r0
     7c2:	11 24       	eor	r1, r1
     7c4:	0f 93       	push	r16
     7c6:	1f 93       	push	r17
     7c8:	2f 93       	push	r18
     7ca:	3f 93       	push	r19
     7cc:	4f 93       	push	r20
     7ce:	5f 93       	push	r21
     7d0:	6f 93       	push	r22
     7d2:	7f 93       	push	r23
     7d4:	8f 93       	push	r24
     7d6:	9f 93       	push	r25
     7d8:	af 93       	push	r26
     7da:	bf 93       	push	r27
     7dc:	ef 93       	push	r30
     7de:	ff 93       	push	r31
     7e0:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
     7e4:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
     7e8:	ac 01       	movw	r20, r24
     7ea:	09 2e       	mov	r0, r25
     7ec:	00 0c       	add	r0, r0
     7ee:	66 0b       	sbc	r22, r22
     7f0:	77 0b       	sbc	r23, r23
     7f2:	9a 01       	movw	r18, r20
     7f4:	11 27       	eor	r17, r17
     7f6:	00 27       	eor	r16, r16
     7f8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     7fc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     800:	60 e0       	ldi	r22, 0x00	; 0
     802:	70 e0       	ldi	r23, 0x00	; 0
     804:	40 2b       	or	r20, r16
     806:	51 2b       	or	r21, r17
     808:	62 2b       	or	r22, r18
     80a:	73 2b       	or	r23, r19
     80c:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
     810:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
     814:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
     818:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
     81c:	b0 9b       	sbis	0x16, 0	; 22
     81e:	1a c0       	rjmp	.+52     	; 0x854 <__vector_3+0x9a>
     820:	01 96       	adiw	r24, 0x01	; 1
     822:	09 2e       	mov	r0, r25
     824:	00 0c       	add	r0, r0
     826:	aa 0b       	sbc	r26, r26
     828:	bb 0b       	sbc	r27, r27
     82a:	bc 01       	movw	r22, r24
     82c:	55 27       	eor	r21, r21
     82e:	44 27       	eor	r20, r20
     830:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     834:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     838:	a0 e0       	ldi	r26, 0x00	; 0
     83a:	b0 e0       	ldi	r27, 0x00	; 0
     83c:	84 2b       	or	r24, r20
     83e:	95 2b       	or	r25, r21
     840:	a6 2b       	or	r26, r22
     842:	b7 2b       	or	r27, r23
     844:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
     848:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
     84c:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
     850:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
     854:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0x4>
     858:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0x5>
     85c:	30 97       	sbiw	r30, 0x00	; 0
     85e:	39 f0       	breq	.+14     	; 0x86e <__vector_3+0xb4>
     860:	62 e0       	ldi	r22, 0x02	; 2
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0x4>
     868:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0x5>
     86c:	09 95       	icall
     86e:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
     872:	ff 91       	pop	r31
     874:	ef 91       	pop	r30
     876:	bf 91       	pop	r27
     878:	af 91       	pop	r26
     87a:	9f 91       	pop	r25
     87c:	8f 91       	pop	r24
     87e:	7f 91       	pop	r23
     880:	6f 91       	pop	r22
     882:	5f 91       	pop	r21
     884:	4f 91       	pop	r20
     886:	3f 91       	pop	r19
     888:	2f 91       	pop	r18
     88a:	1f 91       	pop	r17
     88c:	0f 91       	pop	r16
     88e:	0f 90       	pop	r0
     890:	0f be       	out	0x3f, r0	; 63
     892:	0f 90       	pop	r0
     894:	1f 90       	pop	r1
     896:	18 95       	reti

00000898 <__vector_4>:
     898:	1f 92       	push	r1
     89a:	0f 92       	push	r0
     89c:	0f b6       	in	r0, 0x3f	; 63
     89e:	0f 92       	push	r0
     8a0:	11 24       	eor	r1, r1
     8a2:	0f 93       	push	r16
     8a4:	1f 93       	push	r17
     8a6:	2f 93       	push	r18
     8a8:	3f 93       	push	r19
     8aa:	4f 93       	push	r20
     8ac:	5f 93       	push	r21
     8ae:	6f 93       	push	r22
     8b0:	7f 93       	push	r23
     8b2:	8f 93       	push	r24
     8b4:	9f 93       	push	r25
     8b6:	af 93       	push	r26
     8b8:	bf 93       	push	r27
     8ba:	ef 93       	push	r30
     8bc:	ff 93       	push	r31
     8be:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
     8c2:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
     8c6:	ac 01       	movw	r20, r24
     8c8:	09 2e       	mov	r0, r25
     8ca:	00 0c       	add	r0, r0
     8cc:	66 0b       	sbc	r22, r22
     8ce:	77 0b       	sbc	r23, r23
     8d0:	9a 01       	movw	r18, r20
     8d2:	11 27       	eor	r17, r17
     8d4:	00 27       	eor	r16, r16
     8d6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8da:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8de:	60 e0       	ldi	r22, 0x00	; 0
     8e0:	70 e0       	ldi	r23, 0x00	; 0
     8e2:	40 2b       	or	r20, r16
     8e4:	51 2b       	or	r21, r17
     8e6:	62 2b       	or	r22, r18
     8e8:	73 2b       	or	r23, r19
     8ea:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
     8ee:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
     8f2:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
     8f6:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
     8fa:	b0 9b       	sbis	0x16, 0	; 22
     8fc:	1a c0       	rjmp	.+52     	; 0x932 <__vector_4+0x9a>
     8fe:	01 96       	adiw	r24, 0x01	; 1
     900:	09 2e       	mov	r0, r25
     902:	00 0c       	add	r0, r0
     904:	aa 0b       	sbc	r26, r26
     906:	bb 0b       	sbc	r27, r27
     908:	bc 01       	movw	r22, r24
     90a:	55 27       	eor	r21, r21
     90c:	44 27       	eor	r20, r20
     90e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     912:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     916:	a0 e0       	ldi	r26, 0x00	; 0
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	84 2b       	or	r24, r20
     91c:	95 2b       	or	r25, r21
     91e:	a6 2b       	or	r26, r22
     920:	b7 2b       	or	r27, r23
     922:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
     926:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
     92a:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
     92e:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
     932:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0x6>
     936:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0x7>
     93a:	30 97       	sbiw	r30, 0x00	; 0
     93c:	39 f0       	breq	.+14     	; 0x94c <__vector_4+0xb4>
     93e:	63 e0       	ldi	r22, 0x03	; 3
     940:	70 e0       	ldi	r23, 0x00	; 0
     942:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0x6>
     946:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0x7>
     94a:	09 95       	icall
     94c:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
     950:	ff 91       	pop	r31
     952:	ef 91       	pop	r30
     954:	bf 91       	pop	r27
     956:	af 91       	pop	r26
     958:	9f 91       	pop	r25
     95a:	8f 91       	pop	r24
     95c:	7f 91       	pop	r23
     95e:	6f 91       	pop	r22
     960:	5f 91       	pop	r21
     962:	4f 91       	pop	r20
     964:	3f 91       	pop	r19
     966:	2f 91       	pop	r18
     968:	1f 91       	pop	r17
     96a:	0f 91       	pop	r16
     96c:	0f 90       	pop	r0
     96e:	0f be       	out	0x3f, r0	; 63
     970:	0f 90       	pop	r0
     972:	1f 90       	pop	r1
     974:	18 95       	reti

00000976 <__vector_5>:
     976:	1f 92       	push	r1
     978:	0f 92       	push	r0
     97a:	0f b6       	in	r0, 0x3f	; 63
     97c:	0f 92       	push	r0
     97e:	11 24       	eor	r1, r1
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
     984:	2f 93       	push	r18
     986:	3f 93       	push	r19
     988:	4f 93       	push	r20
     98a:	5f 93       	push	r21
     98c:	6f 93       	push	r22
     98e:	7f 93       	push	r23
     990:	8f 93       	push	r24
     992:	9f 93       	push	r25
     994:	af 93       	push	r26
     996:	bf 93       	push	r27
     998:	ef 93       	push	r30
     99a:	ff 93       	push	r31
     99c:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
     9a0:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
     9a4:	ac 01       	movw	r20, r24
     9a6:	09 2e       	mov	r0, r25
     9a8:	00 0c       	add	r0, r0
     9aa:	66 0b       	sbc	r22, r22
     9ac:	77 0b       	sbc	r23, r23
     9ae:	9a 01       	movw	r18, r20
     9b0:	11 27       	eor	r17, r17
     9b2:	00 27       	eor	r16, r16
     9b4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9b8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9bc:	60 e0       	ldi	r22, 0x00	; 0
     9be:	70 e0       	ldi	r23, 0x00	; 0
     9c0:	40 2b       	or	r20, r16
     9c2:	51 2b       	or	r21, r17
     9c4:	62 2b       	or	r22, r18
     9c6:	73 2b       	or	r23, r19
     9c8:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
     9cc:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
     9d0:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
     9d4:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
     9d8:	b0 9b       	sbis	0x16, 0	; 22
     9da:	1a c0       	rjmp	.+52     	; 0xa10 <__vector_5+0x9a>
     9dc:	01 96       	adiw	r24, 0x01	; 1
     9de:	09 2e       	mov	r0, r25
     9e0:	00 0c       	add	r0, r0
     9e2:	aa 0b       	sbc	r26, r26
     9e4:	bb 0b       	sbc	r27, r27
     9e6:	bc 01       	movw	r22, r24
     9e8:	55 27       	eor	r21, r21
     9ea:	44 27       	eor	r20, r20
     9ec:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9f0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9f4:	a0 e0       	ldi	r26, 0x00	; 0
     9f6:	b0 e0       	ldi	r27, 0x00	; 0
     9f8:	84 2b       	or	r24, r20
     9fa:	95 2b       	or	r25, r21
     9fc:	a6 2b       	or	r26, r22
     9fe:	b7 2b       	or	r27, r23
     a00:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
     a04:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
     a08:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
     a0c:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
     a10:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0x8>
     a14:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0x9>
     a18:	30 97       	sbiw	r30, 0x00	; 0
     a1a:	39 f0       	breq	.+14     	; 0xa2a <__vector_5+0xb4>
     a1c:	64 e0       	ldi	r22, 0x04	; 4
     a1e:	70 e0       	ldi	r23, 0x00	; 0
     a20:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0x8>
     a24:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0x9>
     a28:	09 95       	icall
     a2a:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
     a2e:	ff 91       	pop	r31
     a30:	ef 91       	pop	r30
     a32:	bf 91       	pop	r27
     a34:	af 91       	pop	r26
     a36:	9f 91       	pop	r25
     a38:	8f 91       	pop	r24
     a3a:	7f 91       	pop	r23
     a3c:	6f 91       	pop	r22
     a3e:	5f 91       	pop	r21
     a40:	4f 91       	pop	r20
     a42:	3f 91       	pop	r19
     a44:	2f 91       	pop	r18
     a46:	1f 91       	pop	r17
     a48:	0f 91       	pop	r16
     a4a:	0f 90       	pop	r0
     a4c:	0f be       	out	0x3f, r0	; 63
     a4e:	0f 90       	pop	r0
     a50:	1f 90       	pop	r1
     a52:	18 95       	reti

00000a54 <__vector_10>:
     a54:	1f 92       	push	r1
     a56:	0f 92       	push	r0
     a58:	0f b6       	in	r0, 0x3f	; 63
     a5a:	0f 92       	push	r0
     a5c:	11 24       	eor	r1, r1
     a5e:	0f 93       	push	r16
     a60:	1f 93       	push	r17
     a62:	2f 93       	push	r18
     a64:	3f 93       	push	r19
     a66:	4f 93       	push	r20
     a68:	5f 93       	push	r21
     a6a:	6f 93       	push	r22
     a6c:	7f 93       	push	r23
     a6e:	8f 93       	push	r24
     a70:	9f 93       	push	r25
     a72:	af 93       	push	r26
     a74:	bf 93       	push	r27
     a76:	ef 93       	push	r30
     a78:	ff 93       	push	r31
     a7a:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
     a7e:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
     a82:	ac 01       	movw	r20, r24
     a84:	09 2e       	mov	r0, r25
     a86:	00 0c       	add	r0, r0
     a88:	66 0b       	sbc	r22, r22
     a8a:	77 0b       	sbc	r23, r23
     a8c:	9a 01       	movw	r18, r20
     a8e:	11 27       	eor	r17, r17
     a90:	00 27       	eor	r16, r16
     a92:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a96:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a9a:	60 e0       	ldi	r22, 0x00	; 0
     a9c:	70 e0       	ldi	r23, 0x00	; 0
     a9e:	40 2b       	or	r20, r16
     aa0:	51 2b       	or	r21, r17
     aa2:	62 2b       	or	r22, r18
     aa4:	73 2b       	or	r23, r19
     aa6:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
     aaa:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
     aae:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
     ab2:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
     ab6:	b0 9b       	sbis	0x16, 0	; 22
     ab8:	1a c0       	rjmp	.+52     	; 0xaee <__vector_10+0x9a>
     aba:	01 96       	adiw	r24, 0x01	; 1
     abc:	09 2e       	mov	r0, r25
     abe:	00 0c       	add	r0, r0
     ac0:	aa 0b       	sbc	r26, r26
     ac2:	bb 0b       	sbc	r27, r27
     ac4:	bc 01       	movw	r22, r24
     ac6:	55 27       	eor	r21, r21
     ac8:	44 27       	eor	r20, r20
     aca:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ace:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ad2:	a0 e0       	ldi	r26, 0x00	; 0
     ad4:	b0 e0       	ldi	r27, 0x00	; 0
     ad6:	84 2b       	or	r24, r20
     ad8:	95 2b       	or	r25, r21
     ada:	a6 2b       	or	r26, r22
     adc:	b7 2b       	or	r27, r23
     ade:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
     ae2:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
     ae6:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
     aea:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
     aee:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0xa>
     af2:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0xb>
     af6:	30 97       	sbiw	r30, 0x00	; 0
     af8:	39 f0       	breq	.+14     	; 0xb08 <__vector_10+0xb4>
     afa:	65 e0       	ldi	r22, 0x05	; 5
     afc:	70 e0       	ldi	r23, 0x00	; 0
     afe:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0xa>
     b02:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0xb>
     b06:	09 95       	icall
     b08:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
     b0c:	ff 91       	pop	r31
     b0e:	ef 91       	pop	r30
     b10:	bf 91       	pop	r27
     b12:	af 91       	pop	r26
     b14:	9f 91       	pop	r25
     b16:	8f 91       	pop	r24
     b18:	7f 91       	pop	r23
     b1a:	6f 91       	pop	r22
     b1c:	5f 91       	pop	r21
     b1e:	4f 91       	pop	r20
     b20:	3f 91       	pop	r19
     b22:	2f 91       	pop	r18
     b24:	1f 91       	pop	r17
     b26:	0f 91       	pop	r16
     b28:	0f 90       	pop	r0
     b2a:	0f be       	out	0x3f, r0	; 63
     b2c:	0f 90       	pop	r0
     b2e:	1f 90       	pop	r1
     b30:	18 95       	reti

00000b32 <__vector_11>:
     b32:	1f 92       	push	r1
     b34:	0f 92       	push	r0
     b36:	0f b6       	in	r0, 0x3f	; 63
     b38:	0f 92       	push	r0
     b3a:	11 24       	eor	r1, r1
     b3c:	0f 93       	push	r16
     b3e:	1f 93       	push	r17
     b40:	2f 93       	push	r18
     b42:	3f 93       	push	r19
     b44:	4f 93       	push	r20
     b46:	5f 93       	push	r21
     b48:	6f 93       	push	r22
     b4a:	7f 93       	push	r23
     b4c:	8f 93       	push	r24
     b4e:	9f 93       	push	r25
     b50:	af 93       	push	r26
     b52:	bf 93       	push	r27
     b54:	ef 93       	push	r30
     b56:	ff 93       	push	r31
     b58:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
     b5c:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
     b60:	ac 01       	movw	r20, r24
     b62:	09 2e       	mov	r0, r25
     b64:	00 0c       	add	r0, r0
     b66:	66 0b       	sbc	r22, r22
     b68:	77 0b       	sbc	r23, r23
     b6a:	9a 01       	movw	r18, r20
     b6c:	11 27       	eor	r17, r17
     b6e:	00 27       	eor	r16, r16
     b70:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b74:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b78:	60 e0       	ldi	r22, 0x00	; 0
     b7a:	70 e0       	ldi	r23, 0x00	; 0
     b7c:	40 2b       	or	r20, r16
     b7e:	51 2b       	or	r21, r17
     b80:	62 2b       	or	r22, r18
     b82:	73 2b       	or	r23, r19
     b84:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
     b88:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
     b8c:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
     b90:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
     b94:	b0 9b       	sbis	0x16, 0	; 22
     b96:	1a c0       	rjmp	.+52     	; 0xbcc <__vector_11+0x9a>
     b98:	01 96       	adiw	r24, 0x01	; 1
     b9a:	09 2e       	mov	r0, r25
     b9c:	00 0c       	add	r0, r0
     b9e:	aa 0b       	sbc	r26, r26
     ba0:	bb 0b       	sbc	r27, r27
     ba2:	bc 01       	movw	r22, r24
     ba4:	55 27       	eor	r21, r21
     ba6:	44 27       	eor	r20, r20
     ba8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bac:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bb0:	a0 e0       	ldi	r26, 0x00	; 0
     bb2:	b0 e0       	ldi	r27, 0x00	; 0
     bb4:	84 2b       	or	r24, r20
     bb6:	95 2b       	or	r25, r21
     bb8:	a6 2b       	or	r26, r22
     bba:	b7 2b       	or	r27, r23
     bbc:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
     bc0:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
     bc4:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
     bc8:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
     bcc:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0xc>
     bd0:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0xd>
     bd4:	30 97       	sbiw	r30, 0x00	; 0
     bd6:	39 f0       	breq	.+14     	; 0xbe6 <__vector_11+0xb4>
     bd8:	66 e0       	ldi	r22, 0x06	; 6
     bda:	70 e0       	ldi	r23, 0x00	; 0
     bdc:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0xc>
     be0:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0xd>
     be4:	09 95       	icall
     be6:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
     bea:	ff 91       	pop	r31
     bec:	ef 91       	pop	r30
     bee:	bf 91       	pop	r27
     bf0:	af 91       	pop	r26
     bf2:	9f 91       	pop	r25
     bf4:	8f 91       	pop	r24
     bf6:	7f 91       	pop	r23
     bf8:	6f 91       	pop	r22
     bfa:	5f 91       	pop	r21
     bfc:	4f 91       	pop	r20
     bfe:	3f 91       	pop	r19
     c00:	2f 91       	pop	r18
     c02:	1f 91       	pop	r17
     c04:	0f 91       	pop	r16
     c06:	0f 90       	pop	r0
     c08:	0f be       	out	0x3f, r0	; 63
     c0a:	0f 90       	pop	r0
     c0c:	1f 90       	pop	r1
     c0e:	18 95       	reti

00000c10 <__vector_12>:
     c10:	1f 92       	push	r1
     c12:	0f 92       	push	r0
     c14:	0f b6       	in	r0, 0x3f	; 63
     c16:	0f 92       	push	r0
     c18:	11 24       	eor	r1, r1
     c1a:	0f 93       	push	r16
     c1c:	1f 93       	push	r17
     c1e:	2f 93       	push	r18
     c20:	3f 93       	push	r19
     c22:	4f 93       	push	r20
     c24:	5f 93       	push	r21
     c26:	6f 93       	push	r22
     c28:	7f 93       	push	r23
     c2a:	8f 93       	push	r24
     c2c:	9f 93       	push	r25
     c2e:	af 93       	push	r26
     c30:	bf 93       	push	r27
     c32:	ef 93       	push	r30
     c34:	ff 93       	push	r31
     c36:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
     c3a:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
     c3e:	ac 01       	movw	r20, r24
     c40:	09 2e       	mov	r0, r25
     c42:	00 0c       	add	r0, r0
     c44:	66 0b       	sbc	r22, r22
     c46:	77 0b       	sbc	r23, r23
     c48:	9a 01       	movw	r18, r20
     c4a:	11 27       	eor	r17, r17
     c4c:	00 27       	eor	r16, r16
     c4e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c52:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c56:	60 e0       	ldi	r22, 0x00	; 0
     c58:	70 e0       	ldi	r23, 0x00	; 0
     c5a:	40 2b       	or	r20, r16
     c5c:	51 2b       	or	r21, r17
     c5e:	62 2b       	or	r22, r18
     c60:	73 2b       	or	r23, r19
     c62:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
     c66:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
     c6a:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
     c6e:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
     c72:	b0 9b       	sbis	0x16, 0	; 22
     c74:	1a c0       	rjmp	.+52     	; 0xcaa <__vector_12+0x9a>
     c76:	01 96       	adiw	r24, 0x01	; 1
     c78:	09 2e       	mov	r0, r25
     c7a:	00 0c       	add	r0, r0
     c7c:	aa 0b       	sbc	r26, r26
     c7e:	bb 0b       	sbc	r27, r27
     c80:	bc 01       	movw	r22, r24
     c82:	55 27       	eor	r21, r21
     c84:	44 27       	eor	r20, r20
     c86:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c8a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c8e:	a0 e0       	ldi	r26, 0x00	; 0
     c90:	b0 e0       	ldi	r27, 0x00	; 0
     c92:	84 2b       	or	r24, r20
     c94:	95 2b       	or	r25, r21
     c96:	a6 2b       	or	r26, r22
     c98:	b7 2b       	or	r27, r23
     c9a:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
     c9e:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
     ca2:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
     ca6:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
     caa:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0xe>
     cae:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0xf>
     cb2:	30 97       	sbiw	r30, 0x00	; 0
     cb4:	39 f0       	breq	.+14     	; 0xcc4 <__vector_12+0xb4>
     cb6:	67 e0       	ldi	r22, 0x07	; 7
     cb8:	70 e0       	ldi	r23, 0x00	; 0
     cba:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0xe>
     cbe:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0xf>
     cc2:	09 95       	icall
     cc4:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
     cc8:	ff 91       	pop	r31
     cca:	ef 91       	pop	r30
     ccc:	bf 91       	pop	r27
     cce:	af 91       	pop	r26
     cd0:	9f 91       	pop	r25
     cd2:	8f 91       	pop	r24
     cd4:	7f 91       	pop	r23
     cd6:	6f 91       	pop	r22
     cd8:	5f 91       	pop	r21
     cda:	4f 91       	pop	r20
     cdc:	3f 91       	pop	r19
     cde:	2f 91       	pop	r18
     ce0:	1f 91       	pop	r17
     ce2:	0f 91       	pop	r16
     ce4:	0f 90       	pop	r0
     ce6:	0f be       	out	0x3f, r0	; 63
     ce8:	0f 90       	pop	r0
     cea:	1f 90       	pop	r1
     cec:	18 95       	reti

00000cee <__vector_13>:
     cee:	1f 92       	push	r1
     cf0:	0f 92       	push	r0
     cf2:	0f b6       	in	r0, 0x3f	; 63
     cf4:	0f 92       	push	r0
     cf6:	11 24       	eor	r1, r1
     cf8:	0f 93       	push	r16
     cfa:	1f 93       	push	r17
     cfc:	2f 93       	push	r18
     cfe:	3f 93       	push	r19
     d00:	4f 93       	push	r20
     d02:	5f 93       	push	r21
     d04:	6f 93       	push	r22
     d06:	7f 93       	push	r23
     d08:	8f 93       	push	r24
     d0a:	9f 93       	push	r25
     d0c:	af 93       	push	r26
     d0e:	bf 93       	push	r27
     d10:	ef 93       	push	r30
     d12:	ff 93       	push	r31
     d14:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
     d18:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
     d1c:	ac 01       	movw	r20, r24
     d1e:	09 2e       	mov	r0, r25
     d20:	00 0c       	add	r0, r0
     d22:	66 0b       	sbc	r22, r22
     d24:	77 0b       	sbc	r23, r23
     d26:	9a 01       	movw	r18, r20
     d28:	11 27       	eor	r17, r17
     d2a:	00 27       	eor	r16, r16
     d2c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d30:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d34:	60 e0       	ldi	r22, 0x00	; 0
     d36:	70 e0       	ldi	r23, 0x00	; 0
     d38:	40 2b       	or	r20, r16
     d3a:	51 2b       	or	r21, r17
     d3c:	62 2b       	or	r22, r18
     d3e:	73 2b       	or	r23, r19
     d40:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
     d44:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
     d48:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
     d4c:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
     d50:	b0 9b       	sbis	0x16, 0	; 22
     d52:	1a c0       	rjmp	.+52     	; 0xd88 <__vector_13+0x9a>
     d54:	01 96       	adiw	r24, 0x01	; 1
     d56:	09 2e       	mov	r0, r25
     d58:	00 0c       	add	r0, r0
     d5a:	aa 0b       	sbc	r26, r26
     d5c:	bb 0b       	sbc	r27, r27
     d5e:	bc 01       	movw	r22, r24
     d60:	55 27       	eor	r21, r21
     d62:	44 27       	eor	r20, r20
     d64:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d68:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d6c:	a0 e0       	ldi	r26, 0x00	; 0
     d6e:	b0 e0       	ldi	r27, 0x00	; 0
     d70:	84 2b       	or	r24, r20
     d72:	95 2b       	or	r25, r21
     d74:	a6 2b       	or	r26, r22
     d76:	b7 2b       	or	r27, r23
     d78:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
     d7c:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
     d80:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
     d84:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
     d88:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x10>
     d8c:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x11>
     d90:	30 97       	sbiw	r30, 0x00	; 0
     d92:	39 f0       	breq	.+14     	; 0xda2 <__vector_13+0xb4>
     d94:	68 e0       	ldi	r22, 0x08	; 8
     d96:	70 e0       	ldi	r23, 0x00	; 0
     d98:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x10>
     d9c:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x11>
     da0:	09 95       	icall
     da2:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
     da6:	ff 91       	pop	r31
     da8:	ef 91       	pop	r30
     daa:	bf 91       	pop	r27
     dac:	af 91       	pop	r26
     dae:	9f 91       	pop	r25
     db0:	8f 91       	pop	r24
     db2:	7f 91       	pop	r23
     db4:	6f 91       	pop	r22
     db6:	5f 91       	pop	r21
     db8:	4f 91       	pop	r20
     dba:	3f 91       	pop	r19
     dbc:	2f 91       	pop	r18
     dbe:	1f 91       	pop	r17
     dc0:	0f 91       	pop	r16
     dc2:	0f 90       	pop	r0
     dc4:	0f be       	out	0x3f, r0	; 63
     dc6:	0f 90       	pop	r0
     dc8:	1f 90       	pop	r1
     dca:	18 95       	reti

00000dcc <__vector_14>:
     dcc:	1f 92       	push	r1
     dce:	0f 92       	push	r0
     dd0:	0f b6       	in	r0, 0x3f	; 63
     dd2:	0f 92       	push	r0
     dd4:	11 24       	eor	r1, r1
     dd6:	0f 93       	push	r16
     dd8:	1f 93       	push	r17
     dda:	2f 93       	push	r18
     ddc:	3f 93       	push	r19
     dde:	4f 93       	push	r20
     de0:	5f 93       	push	r21
     de2:	6f 93       	push	r22
     de4:	7f 93       	push	r23
     de6:	8f 93       	push	r24
     de8:	9f 93       	push	r25
     dea:	af 93       	push	r26
     dec:	bf 93       	push	r27
     dee:	ef 93       	push	r30
     df0:	ff 93       	push	r31
     df2:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
     df6:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
     dfa:	ac 01       	movw	r20, r24
     dfc:	09 2e       	mov	r0, r25
     dfe:	00 0c       	add	r0, r0
     e00:	66 0b       	sbc	r22, r22
     e02:	77 0b       	sbc	r23, r23
     e04:	9a 01       	movw	r18, r20
     e06:	11 27       	eor	r17, r17
     e08:	00 27       	eor	r16, r16
     e0a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e0e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e12:	60 e0       	ldi	r22, 0x00	; 0
     e14:	70 e0       	ldi	r23, 0x00	; 0
     e16:	40 2b       	or	r20, r16
     e18:	51 2b       	or	r21, r17
     e1a:	62 2b       	or	r22, r18
     e1c:	73 2b       	or	r23, r19
     e1e:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
     e22:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
     e26:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
     e2a:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
     e2e:	b0 9b       	sbis	0x16, 0	; 22
     e30:	1a c0       	rjmp	.+52     	; 0xe66 <__vector_14+0x9a>
     e32:	01 96       	adiw	r24, 0x01	; 1
     e34:	09 2e       	mov	r0, r25
     e36:	00 0c       	add	r0, r0
     e38:	aa 0b       	sbc	r26, r26
     e3a:	bb 0b       	sbc	r27, r27
     e3c:	bc 01       	movw	r22, r24
     e3e:	55 27       	eor	r21, r21
     e40:	44 27       	eor	r20, r20
     e42:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e46:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e4a:	a0 e0       	ldi	r26, 0x00	; 0
     e4c:	b0 e0       	ldi	r27, 0x00	; 0
     e4e:	84 2b       	or	r24, r20
     e50:	95 2b       	or	r25, r21
     e52:	a6 2b       	or	r26, r22
     e54:	b7 2b       	or	r27, r23
     e56:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
     e5a:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
     e5e:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
     e62:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
     e66:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x12>
     e6a:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x13>
     e6e:	30 97       	sbiw	r30, 0x00	; 0
     e70:	39 f0       	breq	.+14     	; 0xe80 <__vector_14+0xb4>
     e72:	69 e0       	ldi	r22, 0x09	; 9
     e74:	70 e0       	ldi	r23, 0x00	; 0
     e76:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x12>
     e7a:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x13>
     e7e:	09 95       	icall
     e80:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
     e84:	ff 91       	pop	r31
     e86:	ef 91       	pop	r30
     e88:	bf 91       	pop	r27
     e8a:	af 91       	pop	r26
     e8c:	9f 91       	pop	r25
     e8e:	8f 91       	pop	r24
     e90:	7f 91       	pop	r23
     e92:	6f 91       	pop	r22
     e94:	5f 91       	pop	r21
     e96:	4f 91       	pop	r20
     e98:	3f 91       	pop	r19
     e9a:	2f 91       	pop	r18
     e9c:	1f 91       	pop	r17
     e9e:	0f 91       	pop	r16
     ea0:	0f 90       	pop	r0
     ea2:	0f be       	out	0x3f, r0	; 63
     ea4:	0f 90       	pop	r0
     ea6:	1f 90       	pop	r1
     ea8:	18 95       	reti

00000eaa <__vector_15>:
     eaa:	1f 92       	push	r1
     eac:	0f 92       	push	r0
     eae:	0f b6       	in	r0, 0x3f	; 63
     eb0:	0f 92       	push	r0
     eb2:	11 24       	eor	r1, r1
     eb4:	0f 93       	push	r16
     eb6:	1f 93       	push	r17
     eb8:	2f 93       	push	r18
     eba:	3f 93       	push	r19
     ebc:	4f 93       	push	r20
     ebe:	5f 93       	push	r21
     ec0:	6f 93       	push	r22
     ec2:	7f 93       	push	r23
     ec4:	8f 93       	push	r24
     ec6:	9f 93       	push	r25
     ec8:	af 93       	push	r26
     eca:	bf 93       	push	r27
     ecc:	ef 93       	push	r30
     ece:	ff 93       	push	r31
     ed0:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
     ed4:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
     ed8:	ac 01       	movw	r20, r24
     eda:	09 2e       	mov	r0, r25
     edc:	00 0c       	add	r0, r0
     ede:	66 0b       	sbc	r22, r22
     ee0:	77 0b       	sbc	r23, r23
     ee2:	9a 01       	movw	r18, r20
     ee4:	11 27       	eor	r17, r17
     ee6:	00 27       	eor	r16, r16
     ee8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     eec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ef0:	60 e0       	ldi	r22, 0x00	; 0
     ef2:	70 e0       	ldi	r23, 0x00	; 0
     ef4:	40 2b       	or	r20, r16
     ef6:	51 2b       	or	r21, r17
     ef8:	62 2b       	or	r22, r18
     efa:	73 2b       	or	r23, r19
     efc:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
     f00:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
     f04:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
     f08:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
     f0c:	b0 9b       	sbis	0x16, 0	; 22
     f0e:	1a c0       	rjmp	.+52     	; 0xf44 <__vector_15+0x9a>
     f10:	01 96       	adiw	r24, 0x01	; 1
     f12:	09 2e       	mov	r0, r25
     f14:	00 0c       	add	r0, r0
     f16:	aa 0b       	sbc	r26, r26
     f18:	bb 0b       	sbc	r27, r27
     f1a:	bc 01       	movw	r22, r24
     f1c:	55 27       	eor	r21, r21
     f1e:	44 27       	eor	r20, r20
     f20:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f24:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f28:	a0 e0       	ldi	r26, 0x00	; 0
     f2a:	b0 e0       	ldi	r27, 0x00	; 0
     f2c:	84 2b       	or	r24, r20
     f2e:	95 2b       	or	r25, r21
     f30:	a6 2b       	or	r26, r22
     f32:	b7 2b       	or	r27, r23
     f34:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
     f38:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
     f3c:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
     f40:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
     f44:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x14>
     f48:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x15>
     f4c:	30 97       	sbiw	r30, 0x00	; 0
     f4e:	39 f0       	breq	.+14     	; 0xf5e <__vector_15+0xb4>
     f50:	6a e0       	ldi	r22, 0x0A	; 10
     f52:	70 e0       	ldi	r23, 0x00	; 0
     f54:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x14>
     f58:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x15>
     f5c:	09 95       	icall
     f5e:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
     f62:	ff 91       	pop	r31
     f64:	ef 91       	pop	r30
     f66:	bf 91       	pop	r27
     f68:	af 91       	pop	r26
     f6a:	9f 91       	pop	r25
     f6c:	8f 91       	pop	r24
     f6e:	7f 91       	pop	r23
     f70:	6f 91       	pop	r22
     f72:	5f 91       	pop	r21
     f74:	4f 91       	pop	r20
     f76:	3f 91       	pop	r19
     f78:	2f 91       	pop	r18
     f7a:	1f 91       	pop	r17
     f7c:	0f 91       	pop	r16
     f7e:	0f 90       	pop	r0
     f80:	0f be       	out	0x3f, r0	; 63
     f82:	0f 90       	pop	r0
     f84:	1f 90       	pop	r1
     f86:	18 95       	reti

00000f88 <__vector_16>:
     f88:	1f 92       	push	r1
     f8a:	0f 92       	push	r0
     f8c:	0f b6       	in	r0, 0x3f	; 63
     f8e:	0f 92       	push	r0
     f90:	11 24       	eor	r1, r1
     f92:	0f 93       	push	r16
     f94:	1f 93       	push	r17
     f96:	2f 93       	push	r18
     f98:	3f 93       	push	r19
     f9a:	4f 93       	push	r20
     f9c:	5f 93       	push	r21
     f9e:	6f 93       	push	r22
     fa0:	7f 93       	push	r23
     fa2:	8f 93       	push	r24
     fa4:	9f 93       	push	r25
     fa6:	af 93       	push	r26
     fa8:	bf 93       	push	r27
     faa:	ef 93       	push	r30
     fac:	ff 93       	push	r31
     fae:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
     fb2:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
     fb6:	ac 01       	movw	r20, r24
     fb8:	09 2e       	mov	r0, r25
     fba:	00 0c       	add	r0, r0
     fbc:	66 0b       	sbc	r22, r22
     fbe:	77 0b       	sbc	r23, r23
     fc0:	9a 01       	movw	r18, r20
     fc2:	11 27       	eor	r17, r17
     fc4:	00 27       	eor	r16, r16
     fc6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fca:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fce:	60 e0       	ldi	r22, 0x00	; 0
     fd0:	70 e0       	ldi	r23, 0x00	; 0
     fd2:	40 2b       	or	r20, r16
     fd4:	51 2b       	or	r21, r17
     fd6:	62 2b       	or	r22, r18
     fd8:	73 2b       	or	r23, r19
     fda:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
     fde:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
     fe2:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
     fe6:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
     fea:	b0 9b       	sbis	0x16, 0	; 22
     fec:	1a c0       	rjmp	.+52     	; 0x1022 <__vector_16+0x9a>
     fee:	01 96       	adiw	r24, 0x01	; 1
     ff0:	09 2e       	mov	r0, r25
     ff2:	00 0c       	add	r0, r0
     ff4:	aa 0b       	sbc	r26, r26
     ff6:	bb 0b       	sbc	r27, r27
     ff8:	bc 01       	movw	r22, r24
     ffa:	55 27       	eor	r21, r21
     ffc:	44 27       	eor	r20, r20
     ffe:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1002:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1006:	a0 e0       	ldi	r26, 0x00	; 0
    1008:	b0 e0       	ldi	r27, 0x00	; 0
    100a:	84 2b       	or	r24, r20
    100c:	95 2b       	or	r25, r21
    100e:	a6 2b       	or	r26, r22
    1010:	b7 2b       	or	r27, r23
    1012:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
    1016:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
    101a:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
    101e:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
    1022:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x16>
    1026:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x17>
    102a:	30 97       	sbiw	r30, 0x00	; 0
    102c:	39 f0       	breq	.+14     	; 0x103c <__vector_16+0xb4>
    102e:	6b e0       	ldi	r22, 0x0B	; 11
    1030:	70 e0       	ldi	r23, 0x00	; 0
    1032:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x16>
    1036:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x17>
    103a:	09 95       	icall
    103c:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
    1040:	ff 91       	pop	r31
    1042:	ef 91       	pop	r30
    1044:	bf 91       	pop	r27
    1046:	af 91       	pop	r26
    1048:	9f 91       	pop	r25
    104a:	8f 91       	pop	r24
    104c:	7f 91       	pop	r23
    104e:	6f 91       	pop	r22
    1050:	5f 91       	pop	r21
    1052:	4f 91       	pop	r20
    1054:	3f 91       	pop	r19
    1056:	2f 91       	pop	r18
    1058:	1f 91       	pop	r17
    105a:	0f 91       	pop	r16
    105c:	0f 90       	pop	r0
    105e:	0f be       	out	0x3f, r0	; 63
    1060:	0f 90       	pop	r0
    1062:	1f 90       	pop	r1
    1064:	18 95       	reti

00001066 <__vector_17>:
    1066:	1f 92       	push	r1
    1068:	0f 92       	push	r0
    106a:	0f b6       	in	r0, 0x3f	; 63
    106c:	0f 92       	push	r0
    106e:	11 24       	eor	r1, r1
    1070:	0f 93       	push	r16
    1072:	1f 93       	push	r17
    1074:	2f 93       	push	r18
    1076:	3f 93       	push	r19
    1078:	4f 93       	push	r20
    107a:	5f 93       	push	r21
    107c:	6f 93       	push	r22
    107e:	7f 93       	push	r23
    1080:	8f 93       	push	r24
    1082:	9f 93       	push	r25
    1084:	af 93       	push	r26
    1086:	bf 93       	push	r27
    1088:	ef 93       	push	r30
    108a:	ff 93       	push	r31
    108c:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
    1090:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
    1094:	ac 01       	movw	r20, r24
    1096:	09 2e       	mov	r0, r25
    1098:	00 0c       	add	r0, r0
    109a:	66 0b       	sbc	r22, r22
    109c:	77 0b       	sbc	r23, r23
    109e:	9a 01       	movw	r18, r20
    10a0:	11 27       	eor	r17, r17
    10a2:	00 27       	eor	r16, r16
    10a4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10a8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10ac:	60 e0       	ldi	r22, 0x00	; 0
    10ae:	70 e0       	ldi	r23, 0x00	; 0
    10b0:	40 2b       	or	r20, r16
    10b2:	51 2b       	or	r21, r17
    10b4:	62 2b       	or	r22, r18
    10b6:	73 2b       	or	r23, r19
    10b8:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
    10bc:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
    10c0:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
    10c4:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
    10c8:	b0 9b       	sbis	0x16, 0	; 22
    10ca:	1a c0       	rjmp	.+52     	; 0x1100 <__vector_17+0x9a>
    10cc:	01 96       	adiw	r24, 0x01	; 1
    10ce:	09 2e       	mov	r0, r25
    10d0:	00 0c       	add	r0, r0
    10d2:	aa 0b       	sbc	r26, r26
    10d4:	bb 0b       	sbc	r27, r27
    10d6:	bc 01       	movw	r22, r24
    10d8:	55 27       	eor	r21, r21
    10da:	44 27       	eor	r20, r20
    10dc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10e0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10e4:	a0 e0       	ldi	r26, 0x00	; 0
    10e6:	b0 e0       	ldi	r27, 0x00	; 0
    10e8:	84 2b       	or	r24, r20
    10ea:	95 2b       	or	r25, r21
    10ec:	a6 2b       	or	r26, r22
    10ee:	b7 2b       	or	r27, r23
    10f0:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
    10f4:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
    10f8:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
    10fc:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
    1100:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x18>
    1104:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x19>
    1108:	30 97       	sbiw	r30, 0x00	; 0
    110a:	39 f0       	breq	.+14     	; 0x111a <__vector_17+0xb4>
    110c:	6c e0       	ldi	r22, 0x0C	; 12
    110e:	70 e0       	ldi	r23, 0x00	; 0
    1110:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x18>
    1114:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x19>
    1118:	09 95       	icall
    111a:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
    111e:	ff 91       	pop	r31
    1120:	ef 91       	pop	r30
    1122:	bf 91       	pop	r27
    1124:	af 91       	pop	r26
    1126:	9f 91       	pop	r25
    1128:	8f 91       	pop	r24
    112a:	7f 91       	pop	r23
    112c:	6f 91       	pop	r22
    112e:	5f 91       	pop	r21
    1130:	4f 91       	pop	r20
    1132:	3f 91       	pop	r19
    1134:	2f 91       	pop	r18
    1136:	1f 91       	pop	r17
    1138:	0f 91       	pop	r16
    113a:	0f 90       	pop	r0
    113c:	0f be       	out	0x3f, r0	; 63
    113e:	0f 90       	pop	r0
    1140:	1f 90       	pop	r1
    1142:	18 95       	reti

00001144 <__vector_18>:
    1144:	1f 92       	push	r1
    1146:	0f 92       	push	r0
    1148:	0f b6       	in	r0, 0x3f	; 63
    114a:	0f 92       	push	r0
    114c:	11 24       	eor	r1, r1
    114e:	0f 93       	push	r16
    1150:	1f 93       	push	r17
    1152:	2f 93       	push	r18
    1154:	3f 93       	push	r19
    1156:	4f 93       	push	r20
    1158:	5f 93       	push	r21
    115a:	6f 93       	push	r22
    115c:	7f 93       	push	r23
    115e:	8f 93       	push	r24
    1160:	9f 93       	push	r25
    1162:	af 93       	push	r26
    1164:	bf 93       	push	r27
    1166:	ef 93       	push	r30
    1168:	ff 93       	push	r31
    116a:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
    116e:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
    1172:	ac 01       	movw	r20, r24
    1174:	09 2e       	mov	r0, r25
    1176:	00 0c       	add	r0, r0
    1178:	66 0b       	sbc	r22, r22
    117a:	77 0b       	sbc	r23, r23
    117c:	9a 01       	movw	r18, r20
    117e:	11 27       	eor	r17, r17
    1180:	00 27       	eor	r16, r16
    1182:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1186:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    118a:	60 e0       	ldi	r22, 0x00	; 0
    118c:	70 e0       	ldi	r23, 0x00	; 0
    118e:	40 2b       	or	r20, r16
    1190:	51 2b       	or	r21, r17
    1192:	62 2b       	or	r22, r18
    1194:	73 2b       	or	r23, r19
    1196:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
    119a:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
    119e:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
    11a2:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
    11a6:	b0 9b       	sbis	0x16, 0	; 22
    11a8:	1a c0       	rjmp	.+52     	; 0x11de <__vector_18+0x9a>
    11aa:	01 96       	adiw	r24, 0x01	; 1
    11ac:	09 2e       	mov	r0, r25
    11ae:	00 0c       	add	r0, r0
    11b0:	aa 0b       	sbc	r26, r26
    11b2:	bb 0b       	sbc	r27, r27
    11b4:	bc 01       	movw	r22, r24
    11b6:	55 27       	eor	r21, r21
    11b8:	44 27       	eor	r20, r20
    11ba:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11be:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11c2:	a0 e0       	ldi	r26, 0x00	; 0
    11c4:	b0 e0       	ldi	r27, 0x00	; 0
    11c6:	84 2b       	or	r24, r20
    11c8:	95 2b       	or	r25, r21
    11ca:	a6 2b       	or	r26, r22
    11cc:	b7 2b       	or	r27, r23
    11ce:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
    11d2:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
    11d6:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
    11da:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
    11de:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x1a>
    11e2:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x1b>
    11e6:	30 97       	sbiw	r30, 0x00	; 0
    11e8:	39 f0       	breq	.+14     	; 0x11f8 <__vector_18+0xb4>
    11ea:	6d e0       	ldi	r22, 0x0D	; 13
    11ec:	70 e0       	ldi	r23, 0x00	; 0
    11ee:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x1a>
    11f2:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x1b>
    11f6:	09 95       	icall
    11f8:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
    11fc:	ff 91       	pop	r31
    11fe:	ef 91       	pop	r30
    1200:	bf 91       	pop	r27
    1202:	af 91       	pop	r26
    1204:	9f 91       	pop	r25
    1206:	8f 91       	pop	r24
    1208:	7f 91       	pop	r23
    120a:	6f 91       	pop	r22
    120c:	5f 91       	pop	r21
    120e:	4f 91       	pop	r20
    1210:	3f 91       	pop	r19
    1212:	2f 91       	pop	r18
    1214:	1f 91       	pop	r17
    1216:	0f 91       	pop	r16
    1218:	0f 90       	pop	r0
    121a:	0f be       	out	0x3f, r0	; 63
    121c:	0f 90       	pop	r0
    121e:	1f 90       	pop	r1
    1220:	18 95       	reti

00001222 <__vector_19>:
    1222:	1f 92       	push	r1
    1224:	0f 92       	push	r0
    1226:	0f b6       	in	r0, 0x3f	; 63
    1228:	0f 92       	push	r0
    122a:	11 24       	eor	r1, r1
    122c:	0f 93       	push	r16
    122e:	1f 93       	push	r17
    1230:	2f 93       	push	r18
    1232:	3f 93       	push	r19
    1234:	4f 93       	push	r20
    1236:	5f 93       	push	r21
    1238:	6f 93       	push	r22
    123a:	7f 93       	push	r23
    123c:	8f 93       	push	r24
    123e:	9f 93       	push	r25
    1240:	af 93       	push	r26
    1242:	bf 93       	push	r27
    1244:	ef 93       	push	r30
    1246:	ff 93       	push	r31
    1248:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
    124c:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
    1250:	ac 01       	movw	r20, r24
    1252:	09 2e       	mov	r0, r25
    1254:	00 0c       	add	r0, r0
    1256:	66 0b       	sbc	r22, r22
    1258:	77 0b       	sbc	r23, r23
    125a:	9a 01       	movw	r18, r20
    125c:	11 27       	eor	r17, r17
    125e:	00 27       	eor	r16, r16
    1260:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1264:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1268:	60 e0       	ldi	r22, 0x00	; 0
    126a:	70 e0       	ldi	r23, 0x00	; 0
    126c:	40 2b       	or	r20, r16
    126e:	51 2b       	or	r21, r17
    1270:	62 2b       	or	r22, r18
    1272:	73 2b       	or	r23, r19
    1274:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
    1278:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
    127c:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
    1280:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
    1284:	b0 9b       	sbis	0x16, 0	; 22
    1286:	1a c0       	rjmp	.+52     	; 0x12bc <__vector_19+0x9a>
    1288:	01 96       	adiw	r24, 0x01	; 1
    128a:	09 2e       	mov	r0, r25
    128c:	00 0c       	add	r0, r0
    128e:	aa 0b       	sbc	r26, r26
    1290:	bb 0b       	sbc	r27, r27
    1292:	bc 01       	movw	r22, r24
    1294:	55 27       	eor	r21, r21
    1296:	44 27       	eor	r20, r20
    1298:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    129c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12a0:	a0 e0       	ldi	r26, 0x00	; 0
    12a2:	b0 e0       	ldi	r27, 0x00	; 0
    12a4:	84 2b       	or	r24, r20
    12a6:	95 2b       	or	r25, r21
    12a8:	a6 2b       	or	r26, r22
    12aa:	b7 2b       	or	r27, r23
    12ac:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
    12b0:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
    12b4:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
    12b8:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
    12bc:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x1c>
    12c0:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x1d>
    12c4:	30 97       	sbiw	r30, 0x00	; 0
    12c6:	39 f0       	breq	.+14     	; 0x12d6 <__vector_19+0xb4>
    12c8:	6e e0       	ldi	r22, 0x0E	; 14
    12ca:	70 e0       	ldi	r23, 0x00	; 0
    12cc:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x1c>
    12d0:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x1d>
    12d4:	09 95       	icall
    12d6:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
    12da:	ff 91       	pop	r31
    12dc:	ef 91       	pop	r30
    12de:	bf 91       	pop	r27
    12e0:	af 91       	pop	r26
    12e2:	9f 91       	pop	r25
    12e4:	8f 91       	pop	r24
    12e6:	7f 91       	pop	r23
    12e8:	6f 91       	pop	r22
    12ea:	5f 91       	pop	r21
    12ec:	4f 91       	pop	r20
    12ee:	3f 91       	pop	r19
    12f0:	2f 91       	pop	r18
    12f2:	1f 91       	pop	r17
    12f4:	0f 91       	pop	r16
    12f6:	0f 90       	pop	r0
    12f8:	0f be       	out	0x3f, r0	; 63
    12fa:	0f 90       	pop	r0
    12fc:	1f 90       	pop	r1
    12fe:	18 95       	reti

00001300 <__vector_20>:
    1300:	1f 92       	push	r1
    1302:	0f 92       	push	r0
    1304:	0f b6       	in	r0, 0x3f	; 63
    1306:	0f 92       	push	r0
    1308:	11 24       	eor	r1, r1
    130a:	0f 93       	push	r16
    130c:	1f 93       	push	r17
    130e:	2f 93       	push	r18
    1310:	3f 93       	push	r19
    1312:	4f 93       	push	r20
    1314:	5f 93       	push	r21
    1316:	6f 93       	push	r22
    1318:	7f 93       	push	r23
    131a:	8f 93       	push	r24
    131c:	9f 93       	push	r25
    131e:	af 93       	push	r26
    1320:	bf 93       	push	r27
    1322:	ef 93       	push	r30
    1324:	ff 93       	push	r31
    1326:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
    132a:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
    132e:	ac 01       	movw	r20, r24
    1330:	09 2e       	mov	r0, r25
    1332:	00 0c       	add	r0, r0
    1334:	66 0b       	sbc	r22, r22
    1336:	77 0b       	sbc	r23, r23
    1338:	9a 01       	movw	r18, r20
    133a:	11 27       	eor	r17, r17
    133c:	00 27       	eor	r16, r16
    133e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1342:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1346:	60 e0       	ldi	r22, 0x00	; 0
    1348:	70 e0       	ldi	r23, 0x00	; 0
    134a:	40 2b       	or	r20, r16
    134c:	51 2b       	or	r21, r17
    134e:	62 2b       	or	r22, r18
    1350:	73 2b       	or	r23, r19
    1352:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
    1356:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
    135a:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
    135e:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
    1362:	b0 9b       	sbis	0x16, 0	; 22
    1364:	1a c0       	rjmp	.+52     	; 0x139a <__vector_20+0x9a>
    1366:	01 96       	adiw	r24, 0x01	; 1
    1368:	09 2e       	mov	r0, r25
    136a:	00 0c       	add	r0, r0
    136c:	aa 0b       	sbc	r26, r26
    136e:	bb 0b       	sbc	r27, r27
    1370:	bc 01       	movw	r22, r24
    1372:	55 27       	eor	r21, r21
    1374:	44 27       	eor	r20, r20
    1376:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    137a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    137e:	a0 e0       	ldi	r26, 0x00	; 0
    1380:	b0 e0       	ldi	r27, 0x00	; 0
    1382:	84 2b       	or	r24, r20
    1384:	95 2b       	or	r25, r21
    1386:	a6 2b       	or	r26, r22
    1388:	b7 2b       	or	r27, r23
    138a:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
    138e:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
    1392:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
    1396:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
    139a:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0x1e>
    139e:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0x1f>
    13a2:	30 97       	sbiw	r30, 0x00	; 0
    13a4:	39 f0       	breq	.+14     	; 0x13b4 <__vector_20+0xb4>
    13a6:	6f e0       	ldi	r22, 0x0F	; 15
    13a8:	70 e0       	ldi	r23, 0x00	; 0
    13aa:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0x1e>
    13ae:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0x1f>
    13b2:	09 95       	icall
    13b4:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
    13b8:	ff 91       	pop	r31
    13ba:	ef 91       	pop	r30
    13bc:	bf 91       	pop	r27
    13be:	af 91       	pop	r26
    13c0:	9f 91       	pop	r25
    13c2:	8f 91       	pop	r24
    13c4:	7f 91       	pop	r23
    13c6:	6f 91       	pop	r22
    13c8:	5f 91       	pop	r21
    13ca:	4f 91       	pop	r20
    13cc:	3f 91       	pop	r19
    13ce:	2f 91       	pop	r18
    13d0:	1f 91       	pop	r17
    13d2:	0f 91       	pop	r16
    13d4:	0f 90       	pop	r0
    13d6:	0f be       	out	0x3f, r0	; 63
    13d8:	0f 90       	pop	r0
    13da:	1f 90       	pop	r1
    13dc:	18 95       	reti

000013de <__vector_21>:
    13de:	1f 92       	push	r1
    13e0:	0f 92       	push	r0
    13e2:	0f b6       	in	r0, 0x3f	; 63
    13e4:	0f 92       	push	r0
    13e6:	11 24       	eor	r1, r1
    13e8:	0f 93       	push	r16
    13ea:	1f 93       	push	r17
    13ec:	2f 93       	push	r18
    13ee:	3f 93       	push	r19
    13f0:	4f 93       	push	r20
    13f2:	5f 93       	push	r21
    13f4:	6f 93       	push	r22
    13f6:	7f 93       	push	r23
    13f8:	8f 93       	push	r24
    13fa:	9f 93       	push	r25
    13fc:	af 93       	push	r26
    13fe:	bf 93       	push	r27
    1400:	ef 93       	push	r30
    1402:	ff 93       	push	r31
    1404:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
    1408:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
    140c:	ac 01       	movw	r20, r24
    140e:	09 2e       	mov	r0, r25
    1410:	00 0c       	add	r0, r0
    1412:	66 0b       	sbc	r22, r22
    1414:	77 0b       	sbc	r23, r23
    1416:	9a 01       	movw	r18, r20
    1418:	11 27       	eor	r17, r17
    141a:	00 27       	eor	r16, r16
    141c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1420:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1424:	60 e0       	ldi	r22, 0x00	; 0
    1426:	70 e0       	ldi	r23, 0x00	; 0
    1428:	40 2b       	or	r20, r16
    142a:	51 2b       	or	r21, r17
    142c:	62 2b       	or	r22, r18
    142e:	73 2b       	or	r23, r19
    1430:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
    1434:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
    1438:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
    143c:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
    1440:	b0 9b       	sbis	0x16, 0	; 22
    1442:	1a c0       	rjmp	.+52     	; 0x1478 <__vector_21+0x9a>
    1444:	01 96       	adiw	r24, 0x01	; 1
    1446:	09 2e       	mov	r0, r25
    1448:	00 0c       	add	r0, r0
    144a:	aa 0b       	sbc	r26, r26
    144c:	bb 0b       	sbc	r27, r27
    144e:	bc 01       	movw	r22, r24
    1450:	55 27       	eor	r21, r21
    1452:	44 27       	eor	r20, r20
    1454:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1458:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    145c:	a0 e0       	ldi	r26, 0x00	; 0
    145e:	b0 e0       	ldi	r27, 0x00	; 0
    1460:	84 2b       	or	r24, r20
    1462:	95 2b       	or	r25, r21
    1464:	a6 2b       	or	r26, r22
    1466:	b7 2b       	or	r27, r23
    1468:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
    146c:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
    1470:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
    1474:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
    1478:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0x20>
    147c:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0x21>
    1480:	30 97       	sbiw	r30, 0x00	; 0
    1482:	39 f0       	breq	.+14     	; 0x1492 <__vector_21+0xb4>
    1484:	60 e1       	ldi	r22, 0x10	; 16
    1486:	70 e0       	ldi	r23, 0x00	; 0
    1488:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0x20>
    148c:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0x21>
    1490:	09 95       	icall
    1492:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
    1496:	ff 91       	pop	r31
    1498:	ef 91       	pop	r30
    149a:	bf 91       	pop	r27
    149c:	af 91       	pop	r26
    149e:	9f 91       	pop	r25
    14a0:	8f 91       	pop	r24
    14a2:	7f 91       	pop	r23
    14a4:	6f 91       	pop	r22
    14a6:	5f 91       	pop	r21
    14a8:	4f 91       	pop	r20
    14aa:	3f 91       	pop	r19
    14ac:	2f 91       	pop	r18
    14ae:	1f 91       	pop	r17
    14b0:	0f 91       	pop	r16
    14b2:	0f 90       	pop	r0
    14b4:	0f be       	out	0x3f, r0	; 63
    14b6:	0f 90       	pop	r0
    14b8:	1f 90       	pop	r1
    14ba:	18 95       	reti

000014bc <__vector_22>:
    14bc:	1f 92       	push	r1
    14be:	0f 92       	push	r0
    14c0:	0f b6       	in	r0, 0x3f	; 63
    14c2:	0f 92       	push	r0
    14c4:	11 24       	eor	r1, r1
    14c6:	0f 93       	push	r16
    14c8:	1f 93       	push	r17
    14ca:	2f 93       	push	r18
    14cc:	3f 93       	push	r19
    14ce:	4f 93       	push	r20
    14d0:	5f 93       	push	r21
    14d2:	6f 93       	push	r22
    14d4:	7f 93       	push	r23
    14d6:	8f 93       	push	r24
    14d8:	9f 93       	push	r25
    14da:	af 93       	push	r26
    14dc:	bf 93       	push	r27
    14de:	ef 93       	push	r30
    14e0:	ff 93       	push	r31
    14e2:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
    14e6:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
    14ea:	ac 01       	movw	r20, r24
    14ec:	09 2e       	mov	r0, r25
    14ee:	00 0c       	add	r0, r0
    14f0:	66 0b       	sbc	r22, r22
    14f2:	77 0b       	sbc	r23, r23
    14f4:	9a 01       	movw	r18, r20
    14f6:	11 27       	eor	r17, r17
    14f8:	00 27       	eor	r16, r16
    14fa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14fe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1502:	60 e0       	ldi	r22, 0x00	; 0
    1504:	70 e0       	ldi	r23, 0x00	; 0
    1506:	40 2b       	or	r20, r16
    1508:	51 2b       	or	r21, r17
    150a:	62 2b       	or	r22, r18
    150c:	73 2b       	or	r23, r19
    150e:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <timestamp>
    1512:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <timestamp+0x1>
    1516:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <timestamp+0x2>
    151a:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <timestamp+0x3>
    151e:	b0 9b       	sbis	0x16, 0	; 22
    1520:	1a c0       	rjmp	.+52     	; 0x1556 <__vector_22+0x9a>
    1522:	01 96       	adiw	r24, 0x01	; 1
    1524:	09 2e       	mov	r0, r25
    1526:	00 0c       	add	r0, r0
    1528:	aa 0b       	sbc	r26, r26
    152a:	bb 0b       	sbc	r27, r27
    152c:	bc 01       	movw	r22, r24
    152e:	55 27       	eor	r21, r21
    1530:	44 27       	eor	r20, r20
    1532:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1536:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    153a:	a0 e0       	ldi	r26, 0x00	; 0
    153c:	b0 e0       	ldi	r27, 0x00	; 0
    153e:	84 2b       	or	r24, r20
    1540:	95 2b       	or	r25, r21
    1542:	a6 2b       	or	r26, r22
    1544:	b7 2b       	or	r27, r23
    1546:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timestamp>
    154a:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timestamp+0x1>
    154e:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <timestamp+0x2>
    1552:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <timestamp+0x3>
    1556:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0x22>
    155a:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0x23>
    155e:	30 97       	sbiw	r30, 0x00	; 0
    1560:	39 f0       	breq	.+14     	; 0x1570 <__vector_22+0xb4>
    1562:	61 e1       	ldi	r22, 0x11	; 17
    1564:	70 e0       	ldi	r23, 0x00	; 0
    1566:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0x22>
    156a:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0x23>
    156e:	09 95       	icall
    1570:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
    1574:	ff 91       	pop	r31
    1576:	ef 91       	pop	r30
    1578:	bf 91       	pop	r27
    157a:	af 91       	pop	r26
    157c:	9f 91       	pop	r25
    157e:	8f 91       	pop	r24
    1580:	7f 91       	pop	r23
    1582:	6f 91       	pop	r22
    1584:	5f 91       	pop	r21
    1586:	4f 91       	pop	r20
    1588:	3f 91       	pop	r19
    158a:	2f 91       	pop	r18
    158c:	1f 91       	pop	r17
    158e:	0f 91       	pop	r16
    1590:	0f 90       	pop	r0
    1592:	0f be       	out	0x3f, r0	; 63
    1594:	0f 90       	pop	r0
    1596:	1f 90       	pop	r1
    1598:	18 95       	reti

0000159a <idle>:
    159a:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
    159e:	78 94       	sei
    15a0:	81 e0       	ldi	r24, 0x01	; 1
    15a2:	83 bf       	out	0x33, r24	; 51
    15a4:	88 95       	sleep
    15a6:	fc cf       	rjmp	.-8      	; 0x15a0 <idle+0x6>

000015a8 <__vector_9>:
    15a8:	1f 92       	push	r1
    15aa:	0f 92       	push	r0
    15ac:	0f b6       	in	r0, 0x3f	; 63
    15ae:	0f 92       	push	r0
    15b0:	11 24       	eor	r1, r1
    15b2:	2f 93       	push	r18
    15b4:	3f 93       	push	r19
    15b6:	4f 93       	push	r20
    15b8:	5f 93       	push	r21
    15ba:	6f 93       	push	r22
    15bc:	7f 93       	push	r23
    15be:	8f 93       	push	r24
    15c0:	9f 93       	push	r25
    15c2:	ef 93       	push	r30
    15c4:	ff 93       	push	r31
    15c6:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
    15ca:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
    15ce:	01 96       	adiw	r24, 0x01	; 1
    15d0:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <overflows+0x1>
    15d4:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <overflows>
    15d8:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <timerQ>
    15dc:	f0 91 2b 01 	lds	r31, 0x012B	; 0x80012b <timerQ+0x1>
    15e0:	30 97       	sbiw	r30, 0x00	; 0
    15e2:	01 f1       	breq	.+64     	; 0x1624 <__vector_9+0x7c>
    15e4:	42 81       	ldd	r20, Z+2	; 0x02
    15e6:	53 81       	ldd	r21, Z+3	; 0x03
    15e8:	64 81       	ldd	r22, Z+4	; 0x04
    15ea:	75 81       	ldd	r23, Z+5	; 0x05
    15ec:	86 17       	cp	r24, r22
    15ee:	97 07       	cpc	r25, r23
    15f0:	c9 f4       	brne	.+50     	; 0x1624 <__vector_9+0x7c>
    15f2:	ca 01       	movw	r24, r20
    15f4:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15f8:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15fc:	42 1b       	sub	r20, r18
    15fe:	53 0b       	sbc	r21, r19
    1600:	41 30       	cpi	r20, 0x01	; 1
    1602:	51 05       	cpc	r21, r1
    1604:	29 f4       	brne	.+10     	; 0x1610 <__vector_9+0x68>
    1606:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    160a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    160e:	01 96       	adiw	r24, 0x01	; 1
    1610:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1614:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1618:	ef e6       	ldi	r30, 0x6F	; 111
    161a:	f0 e0       	ldi	r31, 0x00	; 0
    161c:	80 81       	ld	r24, Z
    161e:	82 60       	ori	r24, 0x02	; 2
    1620:	80 83       	st	Z, r24
    1622:	05 c0       	rjmp	.+10     	; 0x162e <__vector_9+0x86>
    1624:	ef e6       	ldi	r30, 0x6F	; 111
    1626:	f0 e0       	ldi	r31, 0x00	; 0
    1628:	80 81       	ld	r24, Z
    162a:	8d 7f       	andi	r24, 0xFD	; 253
    162c:	80 83       	st	Z, r24
    162e:	ff 91       	pop	r31
    1630:	ef 91       	pop	r30
    1632:	9f 91       	pop	r25
    1634:	8f 91       	pop	r24
    1636:	7f 91       	pop	r23
    1638:	6f 91       	pop	r22
    163a:	5f 91       	pop	r21
    163c:	4f 91       	pop	r20
    163e:	3f 91       	pop	r19
    1640:	2f 91       	pop	r18
    1642:	0f 90       	pop	r0
    1644:	0f be       	out	0x3f, r0	; 63
    1646:	0f 90       	pop	r0
    1648:	1f 90       	pop	r1
    164a:	18 95       	reti

0000164c <__vector_7>:
    164c:	1f 92       	push	r1
    164e:	0f 92       	push	r0
    1650:	0f b6       	in	r0, 0x3f	; 63
    1652:	0f 92       	push	r0
    1654:	11 24       	eor	r1, r1
    1656:	cf 92       	push	r12
    1658:	df 92       	push	r13
    165a:	ef 92       	push	r14
    165c:	ff 92       	push	r15
    165e:	2f 93       	push	r18
    1660:	3f 93       	push	r19
    1662:	4f 93       	push	r20
    1664:	5f 93       	push	r21
    1666:	6f 93       	push	r22
    1668:	7f 93       	push	r23
    166a:	8f 93       	push	r24
    166c:	9f 93       	push	r25
    166e:	af 93       	push	r26
    1670:	bf 93       	push	r27
    1672:	ef 93       	push	r30
    1674:	ff 93       	push	r31
    1676:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <overflows>
    167a:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <overflows+0x1>
    167e:	6c 01       	movw	r12, r24
    1680:	09 2e       	mov	r0, r25
    1682:	00 0c       	add	r0, r0
    1684:	ee 08       	sbc	r14, r14
    1686:	ff 08       	sbc	r15, r15
    1688:	76 01       	movw	r14, r12
    168a:	dd 24       	eor	r13, r13
    168c:	cc 24       	eor	r12, r12
    168e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1692:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1696:	60 e0       	ldi	r22, 0x00	; 0
    1698:	70 e0       	ldi	r23, 0x00	; 0
    169a:	c4 2a       	or	r12, r20
    169c:	d5 2a       	or	r13, r21
    169e:	e6 2a       	or	r14, r22
    16a0:	f7 2a       	or	r15, r23
    16a2:	b0 9b       	sbis	0x16, 0	; 22
    16a4:	1e c0       	rjmp	.+60     	; 0x16e2 <__vector_7+0x96>
    16a6:	6c 01       	movw	r12, r24
    16a8:	2f ef       	ldi	r18, 0xFF	; 255
    16aa:	c2 1a       	sub	r12, r18
    16ac:	d2 0a       	sbc	r13, r18
    16ae:	0d 2c       	mov	r0, r13
    16b0:	00 0c       	add	r0, r0
    16b2:	ee 08       	sbc	r14, r14
    16b4:	ff 08       	sbc	r15, r15
    16b6:	d6 01       	movw	r26, r12
    16b8:	99 27       	eor	r25, r25
    16ba:	88 27       	eor	r24, r24
    16bc:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16c0:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16c4:	e1 2c       	mov	r14, r1
    16c6:	f1 2c       	mov	r15, r1
    16c8:	c8 2a       	or	r12, r24
    16ca:	d9 2a       	or	r13, r25
    16cc:	ea 2a       	or	r14, r26
    16ce:	fb 2a       	or	r15, r27
    16d0:	08 c0       	rjmp	.+16     	; 0x16e2 <__vector_7+0x96>
    16d2:	8a e2       	ldi	r24, 0x2A	; 42
    16d4:	91 e0       	ldi	r25, 0x01	; 1
    16d6:	0e 94 96 02 	call	0x52c	; 0x52c <dequeue>
    16da:	6c e2       	ldi	r22, 0x2C	; 44
    16dc:	71 e0       	ldi	r23, 0x01	; 1
    16de:	0e 94 34 02 	call	0x468	; 0x468 <enqueueByDeadline>
    16e2:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <timerQ>
    16e6:	f0 91 2b 01 	lds	r31, 0x012B	; 0x80012b <timerQ+0x1>
    16ea:	30 97       	sbiw	r30, 0x00	; 0
    16ec:	69 f0       	breq	.+26     	; 0x1708 <__vector_7+0xbc>
    16ee:	82 81       	ldd	r24, Z+2	; 0x02
    16f0:	93 81       	ldd	r25, Z+3	; 0x03
    16f2:	a4 81       	ldd	r26, Z+4	; 0x04
    16f4:	b5 81       	ldd	r27, Z+5	; 0x05
    16f6:	8c 19       	sub	r24, r12
    16f8:	9d 09       	sbc	r25, r13
    16fa:	ae 09       	sbc	r26, r14
    16fc:	bf 09       	sbc	r27, r15
    16fe:	18 16       	cp	r1, r24
    1700:	19 06       	cpc	r1, r25
    1702:	1a 06       	cpc	r1, r26
    1704:	1b 06       	cpc	r1, r27
    1706:	2c f7       	brge	.-54     	; 0x16d2 <__vector_7+0x86>
    1708:	30 97       	sbiw	r30, 0x00	; 0
    170a:	21 f1       	breq	.+72     	; 0x1754 <__vector_7+0x108>
    170c:	82 81       	ldd	r24, Z+2	; 0x02
    170e:	93 81       	ldd	r25, Z+3	; 0x03
    1710:	a4 81       	ldd	r26, Z+4	; 0x04
    1712:	b5 81       	ldd	r27, Z+5	; 0x05
    1714:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <overflows>
    1718:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <overflows+0x1>
    171c:	2a 17       	cp	r18, r26
    171e:	3b 07       	cpc	r19, r27
    1720:	c9 f4       	brne	.+50     	; 0x1754 <__vector_7+0x108>
    1722:	9c 01       	movw	r18, r24
    1724:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1728:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    172c:	84 1b       	sub	r24, r20
    172e:	95 0b       	sbc	r25, r21
    1730:	01 97       	sbiw	r24, 0x01	; 1
    1732:	31 f4       	brne	.+12     	; 0x1740 <__vector_7+0xf4>
    1734:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1738:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    173c:	2f 5f       	subi	r18, 0xFF	; 255
    173e:	3f 4f       	sbci	r19, 0xFF	; 255
    1740:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1744:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1748:	ef e6       	ldi	r30, 0x6F	; 111
    174a:	f0 e0       	ldi	r31, 0x00	; 0
    174c:	80 81       	ld	r24, Z
    174e:	82 60       	ori	r24, 0x02	; 2
    1750:	80 83       	st	Z, r24
    1752:	05 c0       	rjmp	.+10     	; 0x175e <__vector_7+0x112>
    1754:	ef e6       	ldi	r30, 0x6F	; 111
    1756:	f0 e0       	ldi	r31, 0x00	; 0
    1758:	80 81       	ld	r24, Z
    175a:	8d 7f       	andi	r24, 0xFD	; 253
    175c:	80 83       	st	Z, r24
    175e:	0e 94 cb 02 	call	0x596	; 0x596 <schedule>
    1762:	ff 91       	pop	r31
    1764:	ef 91       	pop	r30
    1766:	bf 91       	pop	r27
    1768:	af 91       	pop	r26
    176a:	9f 91       	pop	r25
    176c:	8f 91       	pop	r24
    176e:	7f 91       	pop	r23
    1770:	6f 91       	pop	r22
    1772:	5f 91       	pop	r21
    1774:	4f 91       	pop	r20
    1776:	3f 91       	pop	r19
    1778:	2f 91       	pop	r18
    177a:	ff 90       	pop	r15
    177c:	ef 90       	pop	r14
    177e:	df 90       	pop	r13
    1780:	cf 90       	pop	r12
    1782:	0f 90       	pop	r0
    1784:	0f be       	out	0x3f, r0	; 63
    1786:	0f 90       	pop	r0
    1788:	1f 90       	pop	r1
    178a:	18 95       	reti

0000178c <async>:
    178c:	3f 92       	push	r3
    178e:	4f 92       	push	r4
    1790:	5f 92       	push	r5
    1792:	6f 92       	push	r6
    1794:	7f 92       	push	r7
    1796:	8f 92       	push	r8
    1798:	9f 92       	push	r9
    179a:	af 92       	push	r10
    179c:	bf 92       	push	r11
    179e:	cf 92       	push	r12
    17a0:	df 92       	push	r13
    17a2:	ef 92       	push	r14
    17a4:	ff 92       	push	r15
    17a6:	0f 93       	push	r16
    17a8:	1f 93       	push	r17
    17aa:	cf 93       	push	r28
    17ac:	df 93       	push	r29
    17ae:	2b 01       	movw	r4, r22
    17b0:	3c 01       	movw	r6, r24
    17b2:	49 01       	movw	r8, r18
    17b4:	5a 01       	movw	r10, r20
    17b6:	8f b7       	in	r24, 0x3f	; 63
    17b8:	80 78       	andi	r24, 0x80	; 128
    17ba:	38 2e       	mov	r3, r24
    17bc:	f8 94       	cli
    17be:	8a e1       	ldi	r24, 0x1A	; 26
    17c0:	91 e0       	ldi	r25, 0x01	; 1
    17c2:	0e 94 96 02 	call	0x52c	; 0x52c <dequeue>
    17c6:	ec 01       	movw	r28, r24
    17c8:	1b 87       	std	Y+11, r17	; 0x0b
    17ca:	0a 87       	std	Y+10, r16	; 0x0a
    17cc:	fd 86       	std	Y+13, r15	; 0x0d
    17ce:	ec 86       	std	Y+12, r14	; 0x0c
    17d0:	df 86       	std	Y+15, r13	; 0x0f
    17d2:	ce 86       	std	Y+14, r12	; 0x0e
    17d4:	33 20       	and	r3, r3
    17d6:	61 f0       	breq	.+24     	; 0x17f0 <async+0x64>
    17d8:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <current>
    17dc:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <current+0x1>
    17e0:	02 80       	ldd	r0, Z+2	; 0x02
    17e2:	f3 81       	ldd	r31, Z+3	; 0x03
    17e4:	e0 2d       	mov	r30, r0
    17e6:	82 81       	ldd	r24, Z+2	; 0x02
    17e8:	93 81       	ldd	r25, Z+3	; 0x03
    17ea:	a4 81       	ldd	r26, Z+4	; 0x04
    17ec:	b5 81       	ldd	r27, Z+5	; 0x05
    17ee:	08 c0       	rjmp	.+16     	; 0x1800 <async+0x74>
    17f0:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <timestamp>
    17f4:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <timestamp+0x1>
    17f8:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <timestamp+0x2>
    17fc:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <timestamp+0x3>
    1800:	48 0e       	add	r4, r24
    1802:	59 1e       	adc	r5, r25
    1804:	6a 1e       	adc	r6, r26
    1806:	7b 1e       	adc	r7, r27
    1808:	4a 82       	std	Y+2, r4	; 0x02
    180a:	5b 82       	std	Y+3, r5	; 0x03
    180c:	6c 82       	std	Y+4, r6	; 0x04
    180e:	7d 82       	std	Y+5, r7	; 0x05
    1810:	18 14       	cp	r1, r8
    1812:	19 04       	cpc	r1, r9
    1814:	1a 04       	cpc	r1, r10
    1816:	1b 04       	cpc	r1, r11
    1818:	44 f0       	brlt	.+16     	; 0x182a <async+0x9e>
    181a:	0f 2e       	mov	r0, r31
    181c:	88 24       	eor	r8, r8
    181e:	8a 94       	dec	r8
    1820:	98 2c       	mov	r9, r8
    1822:	a8 2c       	mov	r10, r8
    1824:	ff e7       	ldi	r31, 0x7F	; 127
    1826:	bf 2e       	mov	r11, r31
    1828:	f0 2d       	mov	r31, r0
    182a:	84 0c       	add	r8, r4
    182c:	95 1c       	adc	r9, r5
    182e:	a6 1c       	adc	r10, r6
    1830:	b7 1c       	adc	r11, r7
    1832:	8e 82       	std	Y+6, r8	; 0x06
    1834:	9f 82       	std	Y+7, r9	; 0x07
    1836:	a8 86       	std	Y+8, r10	; 0x08
    1838:	b9 86       	std	Y+9, r11	; 0x09
    183a:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <overflows>
    183e:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <overflows+0x1>
    1842:	c9 01       	movw	r24, r18
    1844:	03 2e       	mov	r0, r19
    1846:	00 0c       	add	r0, r0
    1848:	aa 0b       	sbc	r26, r26
    184a:	bb 0b       	sbc	r27, r27
    184c:	dc 01       	movw	r26, r24
    184e:	99 27       	eor	r25, r25
    1850:	88 27       	eor	r24, r24
    1852:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1856:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    185a:	60 e0       	ldi	r22, 0x00	; 0
    185c:	70 e0       	ldi	r23, 0x00	; 0
    185e:	84 2b       	or	r24, r20
    1860:	95 2b       	or	r25, r21
    1862:	a6 2b       	or	r26, r22
    1864:	b7 2b       	or	r27, r23
    1866:	b0 9b       	sbis	0x16, 0	; 22
    1868:	13 c0       	rjmp	.+38     	; 0x1890 <async+0x104>
    186a:	c9 01       	movw	r24, r18
    186c:	01 96       	adiw	r24, 0x01	; 1
    186e:	09 2e       	mov	r0, r25
    1870:	00 0c       	add	r0, r0
    1872:	aa 0b       	sbc	r26, r26
    1874:	bb 0b       	sbc	r27, r27
    1876:	dc 01       	movw	r26, r24
    1878:	99 27       	eor	r25, r25
    187a:	88 27       	eor	r24, r24
    187c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1880:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1884:	60 e0       	ldi	r22, 0x00	; 0
    1886:	70 e0       	ldi	r23, 0x00	; 0
    1888:	84 2b       	or	r24, r20
    188a:	95 2b       	or	r25, r21
    188c:	a6 2b       	or	r26, r22
    188e:	b7 2b       	or	r27, r23
    1890:	48 1a       	sub	r4, r24
    1892:	59 0a       	sbc	r5, r25
    1894:	6a 0a       	sbc	r6, r26
    1896:	7b 0a       	sbc	r7, r27
    1898:	14 14       	cp	r1, r4
    189a:	15 04       	cpc	r1, r5
    189c:	16 04       	cpc	r1, r6
    189e:	17 04       	cpc	r1, r7
    18a0:	ac f5       	brge	.+106    	; 0x190c <async+0x180>
    18a2:	6a e2       	ldi	r22, 0x2A	; 42
    18a4:	71 e0       	ldi	r23, 0x01	; 1
    18a6:	ce 01       	movw	r24, r28
    18a8:	0e 94 65 02 	call	0x4ca	; 0x4ca <enqueueByBaseline>
    18ac:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <timerQ>
    18b0:	f0 91 2b 01 	lds	r31, 0x012B	; 0x80012b <timerQ+0x1>
    18b4:	30 97       	sbiw	r30, 0x00	; 0
    18b6:	21 f1       	breq	.+72     	; 0x1900 <async+0x174>
    18b8:	82 81       	ldd	r24, Z+2	; 0x02
    18ba:	93 81       	ldd	r25, Z+3	; 0x03
    18bc:	a4 81       	ldd	r26, Z+4	; 0x04
    18be:	b5 81       	ldd	r27, Z+5	; 0x05
    18c0:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <overflows>
    18c4:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <overflows+0x1>
    18c8:	2a 17       	cp	r18, r26
    18ca:	3b 07       	cpc	r19, r27
    18cc:	c9 f4       	brne	.+50     	; 0x1900 <async+0x174>
    18ce:	9c 01       	movw	r18, r24
    18d0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18d4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18d8:	84 1b       	sub	r24, r20
    18da:	95 0b       	sbc	r25, r21
    18dc:	01 97       	sbiw	r24, 0x01	; 1
    18de:	31 f4       	brne	.+12     	; 0x18ec <async+0x160>
    18e0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18e4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18e8:	2f 5f       	subi	r18, 0xFF	; 255
    18ea:	3f 4f       	sbci	r19, 0xFF	; 255
    18ec:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    18f0:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    18f4:	ef e6       	ldi	r30, 0x6F	; 111
    18f6:	f0 e0       	ldi	r31, 0x00	; 0
    18f8:	80 81       	ld	r24, Z
    18fa:	82 60       	ori	r24, 0x02	; 2
    18fc:	80 83       	st	Z, r24
    18fe:	39 c0       	rjmp	.+114    	; 0x1972 <async+0x1e6>
    1900:	ef e6       	ldi	r30, 0x6F	; 111
    1902:	f0 e0       	ldi	r31, 0x00	; 0
    1904:	80 81       	ld	r24, Z
    1906:	8d 7f       	andi	r24, 0xFD	; 253
    1908:	80 83       	st	Z, r24
    190a:	33 c0       	rjmp	.+102    	; 0x1972 <async+0x1e6>
    190c:	6c e2       	ldi	r22, 0x2C	; 44
    190e:	71 e0       	ldi	r23, 0x01	; 1
    1910:	ce 01       	movw	r24, r28
    1912:	0e 94 34 02 	call	0x468	; 0x468 <enqueueByDeadline>
    1916:	33 20       	and	r3, r3
    1918:	61 f1       	breq	.+88     	; 0x1972 <async+0x1e6>
    191a:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <threadPool>
    191e:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <threadPool+0x1>
    1922:	89 2b       	or	r24, r25
    1924:	31 f1       	breq	.+76     	; 0x1972 <async+0x1e6>
    1926:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <msgQ>
    192a:	f0 91 2d 01 	lds	r31, 0x012D	; 0x80012d <msgQ+0x1>
    192e:	86 81       	ldd	r24, Z+6	; 0x06
    1930:	97 81       	ldd	r25, Z+7	; 0x07
    1932:	a0 85       	ldd	r26, Z+8	; 0x08
    1934:	b1 85       	ldd	r27, Z+9	; 0x09
    1936:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <activeStack>
    193a:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <activeStack+0x1>
    193e:	02 80       	ldd	r0, Z+2	; 0x02
    1940:	f3 81       	ldd	r31, Z+3	; 0x03
    1942:	e0 2d       	mov	r30, r0
    1944:	46 81       	ldd	r20, Z+6	; 0x06
    1946:	57 81       	ldd	r21, Z+7	; 0x07
    1948:	60 85       	ldd	r22, Z+8	; 0x08
    194a:	71 85       	ldd	r23, Z+9	; 0x09
    194c:	84 1b       	sub	r24, r20
    194e:	95 0b       	sbc	r25, r21
    1950:	a6 0b       	sbc	r26, r22
    1952:	b7 0b       	sbc	r27, r23
    1954:	72 f4       	brpl	.+28     	; 0x1972 <async+0x1e6>
    1956:	88 e1       	ldi	r24, 0x18	; 24
    1958:	91 e0       	ldi	r25, 0x01	; 1
    195a:	0e 94 c1 02 	call	0x582	; 0x582 <pop>
    195e:	66 e1       	ldi	r22, 0x16	; 22
    1960:	71 e0       	ldi	r23, 0x01	; 1
    1962:	0e 94 b7 02 	call	0x56e	; 0x56e <push>
    1966:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <activeStack>
    196a:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <activeStack+0x1>
    196e:	0e 94 14 02 	call	0x428	; 0x428 <dispatch>
    1972:	33 20       	and	r3, r3
    1974:	09 f0       	breq	.+2      	; 0x1978 <async+0x1ec>
    1976:	78 94       	sei
    1978:	ce 01       	movw	r24, r28
    197a:	df 91       	pop	r29
    197c:	cf 91       	pop	r28
    197e:	1f 91       	pop	r17
    1980:	0f 91       	pop	r16
    1982:	ff 90       	pop	r15
    1984:	ef 90       	pop	r14
    1986:	df 90       	pop	r13
    1988:	cf 90       	pop	r12
    198a:	bf 90       	pop	r11
    198c:	af 90       	pop	r10
    198e:	9f 90       	pop	r9
    1990:	8f 90       	pop	r8
    1992:	7f 90       	pop	r7
    1994:	6f 90       	pop	r6
    1996:	5f 90       	pop	r5
    1998:	4f 90       	pop	r4
    199a:	3f 90       	pop	r3
    199c:	08 95       	ret

0000199e <sync>:
    199e:	cf 92       	push	r12
    19a0:	df 92       	push	r13
    19a2:	ef 92       	push	r14
    19a4:	ff 92       	push	r15
    19a6:	0f 93       	push	r16
    19a8:	1f 93       	push	r17
    19aa:	cf 93       	push	r28
    19ac:	df 93       	push	r29
    19ae:	ec 01       	movw	r28, r24
    19b0:	7b 01       	movw	r14, r22
    19b2:	6a 01       	movw	r12, r20
    19b4:	1f b7       	in	r17, 0x3f	; 63
    19b6:	10 78       	andi	r17, 0x80	; 128
    19b8:	f8 94       	cli
    19ba:	a8 81       	ld	r26, Y
    19bc:	b9 81       	ldd	r27, Y+1	; 0x01
    19be:	10 97       	sbiw	r26, 0x00	; 0
    19c0:	19 f4       	brne	.+6      	; 0x19c8 <sync+0x2a>
    19c2:	35 c0       	rjmp	.+106    	; 0x1a2e <sync+0x90>
    19c4:	a0 81       	ld	r26, Z
    19c6:	b1 81       	ldd	r27, Z+1	; 0x01
    19c8:	14 96       	adiw	r26, 0x04	; 4
    19ca:	ed 91       	ld	r30, X+
    19cc:	fc 91       	ld	r31, X
    19ce:	15 97       	sbiw	r26, 0x05	; 5
    19d0:	30 97       	sbiw	r30, 0x00	; 0
    19d2:	c1 f7       	brne	.-16     	; 0x19c4 <sync+0x26>
    19d4:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <current>
    19d8:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <current+0x1>
    19dc:	a2 17       	cp	r26, r18
    19de:	b3 07       	cpc	r27, r19
    19e0:	11 f0       	breq	.+4      	; 0x19e6 <sync+0x48>
    19e2:	11 11       	cpse	r17, r1
    19e4:	07 c0       	rjmp	.+14     	; 0x19f4 <sync+0x56>
    19e6:	11 23       	and	r17, r17
    19e8:	09 f4       	brne	.+2      	; 0x19ec <sync+0x4e>
    19ea:	4a c0       	rjmp	.+148    	; 0x1a80 <sync+0xe2>
    19ec:	78 94       	sei
    19ee:	8f ef       	ldi	r24, 0xFF	; 255
    19f0:	9f ef       	ldi	r25, 0xFF	; 255
    19f2:	4e c0       	rjmp	.+156    	; 0x1a90 <sync+0xf2>
    19f4:	8a 81       	ldd	r24, Y+2	; 0x02
    19f6:	9b 81       	ldd	r25, Y+3	; 0x03
    19f8:	00 97       	sbiw	r24, 0x00	; 0
    19fa:	19 f0       	breq	.+6      	; 0x1a02 <sync+0x64>
    19fc:	fc 01       	movw	r30, r24
    19fe:	15 82       	std	Z+5, r1	; 0x05
    1a00:	14 82       	std	Z+4, r1	; 0x04
    1a02:	3b 83       	std	Y+3, r19	; 0x03
    1a04:	2a 83       	std	Y+2, r18	; 0x02
    1a06:	f9 01       	movw	r30, r18
    1a08:	d5 83       	std	Z+5, r29	; 0x05
    1a0a:	c4 83       	std	Z+4, r28	; 0x04
    1a0c:	cd 01       	movw	r24, r26
    1a0e:	0e 94 14 02 	call	0x428	; 0x428 <dispatch>
    1a12:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <current>
    1a16:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <current+0x1>
    1a1a:	82 81       	ldd	r24, Z+2	; 0x02
    1a1c:	93 81       	ldd	r25, Z+3	; 0x03
    1a1e:	89 2b       	or	r24, r25
    1a20:	31 f4       	brne	.+12     	; 0x1a2e <sync+0x90>
    1a22:	11 23       	and	r17, r17
    1a24:	81 f1       	breq	.+96     	; 0x1a86 <sync+0xe8>
    1a26:	78 94       	sei
    1a28:	80 e0       	ldi	r24, 0x00	; 0
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	31 c0       	rjmp	.+98     	; 0x1a90 <sync+0xf2>
    1a2e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <current>
    1a32:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <current+0x1>
    1a36:	99 83       	std	Y+1, r25	; 0x01
    1a38:	88 83       	st	Y, r24
    1a3a:	11 23       	and	r17, r17
    1a3c:	29 f0       	breq	.+10     	; 0x1a48 <sync+0xaa>
    1a3e:	8a 81       	ldd	r24, Y+2	; 0x02
    1a40:	9b 81       	ldd	r25, Y+3	; 0x03
    1a42:	01 97       	sbiw	r24, 0x01	; 1
    1a44:	09 f0       	breq	.+2      	; 0x1a48 <sync+0xaa>
    1a46:	78 94       	sei
    1a48:	b6 01       	movw	r22, r12
    1a4a:	ce 01       	movw	r24, r28
    1a4c:	f7 01       	movw	r30, r14
    1a4e:	09 95       	icall
    1a50:	f8 2e       	mov	r15, r24
    1a52:	09 2f       	mov	r16, r25
    1a54:	8f b7       	in	r24, 0x3f	; 63
    1a56:	f8 94       	cli
    1a58:	19 82       	std	Y+1, r1	; 0x01
    1a5a:	18 82       	st	Y, r1
    1a5c:	8a 81       	ldd	r24, Y+2	; 0x02
    1a5e:	9b 81       	ldd	r25, Y+3	; 0x03
    1a60:	82 30       	cpi	r24, 0x02	; 2
    1a62:	91 05       	cpc	r25, r1
    1a64:	38 f0       	brcs	.+14     	; 0x1a74 <sync+0xd6>
    1a66:	1b 82       	std	Y+3, r1	; 0x03
    1a68:	1a 82       	std	Y+2, r1	; 0x02
    1a6a:	fc 01       	movw	r30, r24
    1a6c:	15 82       	std	Z+5, r1	; 0x05
    1a6e:	14 82       	std	Z+4, r1	; 0x04
    1a70:	0e 94 14 02 	call	0x428	; 0x428 <dispatch>
    1a74:	11 23       	and	r17, r17
    1a76:	51 f0       	breq	.+20     	; 0x1a8c <sync+0xee>
    1a78:	78 94       	sei
    1a7a:	8f 2d       	mov	r24, r15
    1a7c:	90 2f       	mov	r25, r16
    1a7e:	08 c0       	rjmp	.+16     	; 0x1a90 <sync+0xf2>
    1a80:	8f ef       	ldi	r24, 0xFF	; 255
    1a82:	9f ef       	ldi	r25, 0xFF	; 255
    1a84:	05 c0       	rjmp	.+10     	; 0x1a90 <sync+0xf2>
    1a86:	80 e0       	ldi	r24, 0x00	; 0
    1a88:	90 e0       	ldi	r25, 0x00	; 0
    1a8a:	02 c0       	rjmp	.+4      	; 0x1a90 <sync+0xf2>
    1a8c:	8f 2d       	mov	r24, r15
    1a8e:	90 2f       	mov	r25, r16
    1a90:	df 91       	pop	r29
    1a92:	cf 91       	pop	r28
    1a94:	1f 91       	pop	r17
    1a96:	0f 91       	pop	r16
    1a98:	ff 90       	pop	r15
    1a9a:	ef 90       	pop	r14
    1a9c:	df 90       	pop	r13
    1a9e:	cf 90       	pop	r12
    1aa0:	08 95       	ret

00001aa2 <run>:
    1aa2:	00 91 14 01 	lds	r16, 0x0114	; 0x800114 <current>
    1aa6:	10 91 15 01 	lds	r17, 0x0115	; 0x800115 <current+0x1>
    1aaa:	8c e2       	ldi	r24, 0x2C	; 44
    1aac:	91 e0       	ldi	r25, 0x01	; 1
    1aae:	0e 94 96 02 	call	0x52c	; 0x52c <dequeue>
    1ab2:	ec 01       	movw	r28, r24
    1ab4:	f8 01       	movw	r30, r16
    1ab6:	93 83       	std	Z+3, r25	; 0x03
    1ab8:	82 83       	std	Z+2, r24	; 0x02
    1aba:	78 94       	sei
    1abc:	6c 85       	ldd	r22, Y+12	; 0x0c
    1abe:	7d 85       	ldd	r23, Y+13	; 0x0d
    1ac0:	4e 85       	ldd	r20, Y+14	; 0x0e
    1ac2:	5f 85       	ldd	r21, Y+15	; 0x0f
    1ac4:	8a 85       	ldd	r24, Y+10	; 0x0a
    1ac6:	9b 85       	ldd	r25, Y+11	; 0x0b
    1ac8:	0e 94 cf 0c 	call	0x199e	; 0x199e <sync>
    1acc:	8f b7       	in	r24, 0x3f	; 63
    1ace:	f8 94       	cli
    1ad0:	6a e1       	ldi	r22, 0x1A	; 26
    1ad2:	71 e0       	ldi	r23, 0x01	; 1
    1ad4:	ce 01       	movw	r24, r28
    1ad6:	0e 94 ad 02 	call	0x55a	; 0x55a <insert>
    1ada:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <activeStack>
    1ade:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <activeStack+0x1>
    1ae2:	01 90       	ld	r0, Z+
    1ae4:	f0 81       	ld	r31, Z
    1ae6:	e0 2d       	mov	r30, r0
    1ae8:	c2 81       	ldd	r28, Z+2	; 0x02
    1aea:	d3 81       	ldd	r29, Z+3	; 0x03
    1aec:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <msgQ>
    1af0:	f0 91 2d 01 	lds	r31, 0x012D	; 0x80012d <msgQ+0x1>
    1af4:	30 97       	sbiw	r30, 0x00	; 0
    1af6:	a1 f0       	breq	.+40     	; 0x1b20 <run+0x7e>
    1af8:	20 97       	sbiw	r28, 0x00	; 0
    1afa:	99 f2       	breq	.-90     	; 0x1aa2 <run>
    1afc:	86 81       	ldd	r24, Z+6	; 0x06
    1afe:	97 81       	ldd	r25, Z+7	; 0x07
    1b00:	a0 85       	ldd	r26, Z+8	; 0x08
    1b02:	b1 85       	ldd	r27, Z+9	; 0x09
    1b04:	4e 81       	ldd	r20, Y+6	; 0x06
    1b06:	5f 81       	ldd	r21, Y+7	; 0x07
    1b08:	68 85       	ldd	r22, Y+8	; 0x08
    1b0a:	79 85       	ldd	r23, Y+9	; 0x09
    1b0c:	84 1b       	sub	r24, r20
    1b0e:	95 0b       	sbc	r25, r21
    1b10:	a6 0b       	sbc	r26, r22
    1b12:	b7 0b       	sbc	r27, r23
    1b14:	18 16       	cp	r1, r24
    1b16:	19 06       	cpc	r1, r25
    1b18:	1a 06       	cpc	r1, r26
    1b1a:	1b 06       	cpc	r1, r27
    1b1c:	0c f0       	brlt	.+2      	; 0x1b20 <run+0x7e>
    1b1e:	c1 cf       	rjmp	.-126    	; 0x1aa2 <run>
    1b20:	86 e1       	ldi	r24, 0x16	; 22
    1b22:	91 e0       	ldi	r25, 0x01	; 1
    1b24:	0e 94 c1 02 	call	0x582	; 0x582 <pop>
    1b28:	68 e1       	ldi	r22, 0x18	; 24
    1b2a:	71 e0       	ldi	r23, 0x01	; 1
    1b2c:	0e 94 b7 02 	call	0x56e	; 0x56e <push>
    1b30:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <activeStack>
    1b34:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <activeStack+0x1>
    1b38:	02 c0       	rjmp	.+4      	; 0x1b3e <run+0x9c>
    1b3a:	a0 81       	ld	r26, Z
    1b3c:	b1 81       	ldd	r27, Z+1	; 0x01
    1b3e:	14 96       	adiw	r26, 0x04	; 4
    1b40:	ed 91       	ld	r30, X+
    1b42:	fc 91       	ld	r31, X
    1b44:	15 97       	sbiw	r26, 0x05	; 5
    1b46:	30 97       	sbiw	r30, 0x00	; 0
    1b48:	c1 f7       	brne	.-16     	; 0x1b3a <run+0x98>
    1b4a:	cd 01       	movw	r24, r26
    1b4c:	0e 94 14 02 	call	0x428	; 0x428 <dispatch>
    1b50:	a8 cf       	rjmp	.-176    	; 0x1aa2 <run>

00001b52 <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    1b52:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    1b54:	42 31       	cpi	r20, 0x12	; 18
    1b56:	b8 f4       	brcc	.+46     	; 0x1b86 <install+0x34>
        char status;
        DISABLE(status);
    1b58:	9f b7       	in	r25, 0x3f	; 63
    1b5a:	90 78       	andi	r25, 0x80	; 128
    1b5c:	f8 94       	cli
        otable[i] = obj;
    1b5e:	50 e0       	ldi	r21, 0x00	; 0
    1b60:	44 0f       	add	r20, r20
    1b62:	55 1f       	adc	r21, r21
    1b64:	da 01       	movw	r26, r20
    1b66:	a2 5d       	subi	r26, 0xD2	; 210
    1b68:	be 4f       	sbci	r27, 0xFE	; 254
    1b6a:	ed 93       	st	X+, r30
    1b6c:	fc 93       	st	X, r31
        mtable[i] = m;
    1b6e:	da 01       	movw	r26, r20
    1b70:	aa 53       	subi	r26, 0x3A	; 58
    1b72:	be 4f       	sbci	r27, 0xFE	; 254
    1b74:	6d 93       	st	X+, r22
    1b76:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1b78:	21 e0       	ldi	r18, 0x01	; 1
    1b7a:	30 e0       	ldi	r19, 0x00	; 0
    1b7c:	33 83       	std	Z+3, r19	; 0x03
    1b7e:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    1b80:	99 23       	and	r25, r25
    1b82:	09 f0       	breq	.+2      	; 0x1b86 <install+0x34>
    1b84:	78 94       	sei
    1b86:	08 95       	ret

00001b88 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1b88:	8c 01       	movw	r16, r24
    1b8a:	7b 01       	movw	r14, r22
    1b8c:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1b8e:	8f b7       	in	r24, 0x3f	; 63
    1b90:	f8 94       	cli
    initialize();
    1b92:	0e 94 75 01 	call	0x2ea	; 0x2ea <initialize>
    ENABLE(1);
    1b96:	78 94       	sei
    if (m != NULL)
    1b98:	e1 14       	cp	r14, r1
    1b9a:	f1 04       	cpc	r15, r1
    1b9c:	41 f0       	breq	.+16     	; 0x1bae <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1b9e:	20 e0       	ldi	r18, 0x00	; 0
    1ba0:	30 e0       	ldi	r19, 0x00	; 0
    1ba2:	a9 01       	movw	r20, r18
    1ba4:	60 e0       	ldi	r22, 0x00	; 0
    1ba6:	70 e0       	ldi	r23, 0x00	; 0
    1ba8:	cb 01       	movw	r24, r22
    1baa:	0e 94 c6 0b 	call	0x178c	; 0x178c <async>
    DISABLE(status);
    1bae:	8f b7       	in	r24, 0x3f	; 63
    1bb0:	f8 94       	cli
    idle();
    1bb2:	0e 94 cd 0a 	call	0x159a	; 0x159a <idle>

00001bb6 <__divmodhi4>:
    1bb6:	97 fb       	bst	r25, 7
    1bb8:	07 2e       	mov	r0, r23
    1bba:	16 f4       	brtc	.+4      	; 0x1bc0 <__divmodhi4+0xa>
    1bbc:	00 94       	com	r0
    1bbe:	07 d0       	rcall	.+14     	; 0x1bce <__divmodhi4_neg1>
    1bc0:	77 fd       	sbrc	r23, 7
    1bc2:	09 d0       	rcall	.+18     	; 0x1bd6 <__divmodhi4_neg2>
    1bc4:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <__udivmodhi4>
    1bc8:	07 fc       	sbrc	r0, 7
    1bca:	05 d0       	rcall	.+10     	; 0x1bd6 <__divmodhi4_neg2>
    1bcc:	3e f4       	brtc	.+14     	; 0x1bdc <__divmodhi4_exit>

00001bce <__divmodhi4_neg1>:
    1bce:	90 95       	com	r25
    1bd0:	81 95       	neg	r24
    1bd2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bd4:	08 95       	ret

00001bd6 <__divmodhi4_neg2>:
    1bd6:	70 95       	com	r23
    1bd8:	61 95       	neg	r22
    1bda:	7f 4f       	sbci	r23, 0xFF	; 255

00001bdc <__divmodhi4_exit>:
    1bdc:	08 95       	ret

00001bde <__udivmodhi4>:
    1bde:	aa 1b       	sub	r26, r26
    1be0:	bb 1b       	sub	r27, r27
    1be2:	51 e1       	ldi	r21, 0x11	; 17
    1be4:	07 c0       	rjmp	.+14     	; 0x1bf4 <__udivmodhi4_ep>

00001be6 <__udivmodhi4_loop>:
    1be6:	aa 1f       	adc	r26, r26
    1be8:	bb 1f       	adc	r27, r27
    1bea:	a6 17       	cp	r26, r22
    1bec:	b7 07       	cpc	r27, r23
    1bee:	10 f0       	brcs	.+4      	; 0x1bf4 <__udivmodhi4_ep>
    1bf0:	a6 1b       	sub	r26, r22
    1bf2:	b7 0b       	sbc	r27, r23

00001bf4 <__udivmodhi4_ep>:
    1bf4:	88 1f       	adc	r24, r24
    1bf6:	99 1f       	adc	r25, r25
    1bf8:	5a 95       	dec	r21
    1bfa:	a9 f7       	brne	.-22     	; 0x1be6 <__udivmodhi4_loop>
    1bfc:	80 95       	com	r24
    1bfe:	90 95       	com	r25
    1c00:	bc 01       	movw	r22, r24
    1c02:	cd 01       	movw	r24, r26
    1c04:	08 95       	ret

00001c06 <setjmp>:
    1c06:	dc 01       	movw	r26, r24
    1c08:	2d 92       	st	X+, r2
    1c0a:	3d 92       	st	X+, r3
    1c0c:	4d 92       	st	X+, r4
    1c0e:	5d 92       	st	X+, r5
    1c10:	6d 92       	st	X+, r6
    1c12:	7d 92       	st	X+, r7
    1c14:	8d 92       	st	X+, r8
    1c16:	9d 92       	st	X+, r9
    1c18:	ad 92       	st	X+, r10
    1c1a:	bd 92       	st	X+, r11
    1c1c:	cd 92       	st	X+, r12
    1c1e:	dd 92       	st	X+, r13
    1c20:	ed 92       	st	X+, r14
    1c22:	fd 92       	st	X+, r15
    1c24:	0d 93       	st	X+, r16
    1c26:	1d 93       	st	X+, r17
    1c28:	cd 93       	st	X+, r28
    1c2a:	dd 93       	st	X+, r29
    1c2c:	ff 91       	pop	r31
    1c2e:	ef 91       	pop	r30
    1c30:	8d b7       	in	r24, 0x3d	; 61
    1c32:	8d 93       	st	X+, r24
    1c34:	8e b7       	in	r24, 0x3e	; 62
    1c36:	8d 93       	st	X+, r24
    1c38:	8f b7       	in	r24, 0x3f	; 63
    1c3a:	8d 93       	st	X+, r24
    1c3c:	ed 93       	st	X+, r30
    1c3e:	fd 93       	st	X+, r31
    1c40:	88 27       	eor	r24, r24
    1c42:	99 27       	eor	r25, r25
    1c44:	09 94       	ijmp

00001c46 <longjmp>:
    1c46:	dc 01       	movw	r26, r24
    1c48:	cb 01       	movw	r24, r22
    1c4a:	81 30       	cpi	r24, 0x01	; 1
    1c4c:	91 05       	cpc	r25, r1
    1c4e:	81 1d       	adc	r24, r1
    1c50:	2d 90       	ld	r2, X+
    1c52:	3d 90       	ld	r3, X+
    1c54:	4d 90       	ld	r4, X+
    1c56:	5d 90       	ld	r5, X+
    1c58:	6d 90       	ld	r6, X+
    1c5a:	7d 90       	ld	r7, X+
    1c5c:	8d 90       	ld	r8, X+
    1c5e:	9d 90       	ld	r9, X+
    1c60:	ad 90       	ld	r10, X+
    1c62:	bd 90       	ld	r11, X+
    1c64:	cd 90       	ld	r12, X+
    1c66:	dd 90       	ld	r13, X+
    1c68:	ed 90       	ld	r14, X+
    1c6a:	fd 90       	ld	r15, X+
    1c6c:	0d 91       	ld	r16, X+
    1c6e:	1d 91       	ld	r17, X+
    1c70:	cd 91       	ld	r28, X+
    1c72:	dd 91       	ld	r29, X+
    1c74:	ed 91       	ld	r30, X+
    1c76:	fd 91       	ld	r31, X+
    1c78:	0d 90       	ld	r0, X+
    1c7a:	f8 94       	cli
    1c7c:	fe bf       	out	0x3e, r31	; 62
    1c7e:	0f be       	out	0x3f, r0	; 63
    1c80:	ed bf       	out	0x3d, r30	; 61
    1c82:	ed 91       	ld	r30, X+
    1c84:	fd 91       	ld	r31, X+
    1c86:	09 94       	ijmp

00001c88 <_exit>:
    1c88:	f8 94       	cli

00001c8a <__stop_program>:
    1c8a:	ff cf       	rjmp	.-2      	; 0x1c8a <__stop_program>
